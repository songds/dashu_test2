15:09:29.382 INFO  [] StartupInfoLogger.logStarting:48 Starting Runner on DS-TS-0358 with PID 11900 (D:\Workspace\spring_boot_kafka_test2\bin started by ex-songdeshun in D:\Workspace\spring_boot_kafka_test2)
15:09:29.382 INFO  [] SpringApplication.logStartupProfileInfo:659 No active profile set, falling back to default profiles: default
15:09:29.413 INFO  [] AbstractApplicationContext.prepareRefresh:581 Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2abf4075: startup date [Wed Sep 27 15:09:29 CST 2017]; root of context hierarchy
15:09:30.350 INFO  [] RepositoryConfigurationDelegate.multipleStoresDetected:166 Multiple Spring Data modules found, entering strict repository configuration mode!
15:09:30.445 INFO  [] RepositoryConfigurationDelegate.multipleStoresDetected:166 Multiple Spring Data modules found, entering strict repository configuration mode!
15:09:30.690 INFO  [] PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 Bean 'com.dashuf.core.common.configuration.CommonConfiguration' of type [class com.dashuf.core.common.configuration.CommonConfiguration$$EnhancerBySpringCGLIB$$524dca22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:30.700 INFO  [] PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 Bean 'com.dashuf.core.event.configuration.EventConfiguration' of type [class com.dashuf.core.event.configuration.EventConfiguration$$EnhancerBySpringCGLIB$$af87ae5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:30.700 INFO  [] PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [class org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$832a31ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:30.770 INFO  [] PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$af78207c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:09:31.090 INFO  [] Xnio.<clinit>:99 XNIO version 3.3.6.Final
15:09:31.110 INFO  [] NioXnio.<clinit>:55 XNIO NIO Implementation Version 3.3.6.Final
15:09:31.180 WARN  [] Bootstrap.handleDeployment:67 UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
15:09:31.180 WARN  [] Bootstrap.handleDeployment:76 UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
15:09:31.200 INFO  [] ServletContextImpl.log:313 Initializing Spring embedded WebApplicationContext
15:09:31.200 INFO  [] EmbeddedWebApplicationContext.prepareEmbeddedWebApplicationContext:276 Root WebApplicationContext: initialization completed in 1787 ms
15:09:31.370 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'metricFilter' to: [/*]
15:09:31.375 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'characterEncodingFilter' to: [/*]
15:09:31.375 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
15:09:31.375 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'httpPutFormContentFilter' to: [/*]
15:09:31.376 INFO  [] AbstractFilterRegistrationBean.configure:271 Mapping filter: 'contextFilter' to urls: [*.do, /api/*]
15:09:31.376 INFO  [] AbstractFilterRegistrationBean.configure:271 Mapping filter: 'logFilter' to urls: [*.do, /api/*]
15:09:31.376 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'requestContextFilter' to: [/*]
15:09:31.376 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'webRequestLoggingFilter' to: [/*]
15:09:31.376 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'applicationContextIdFilter' to: [/*]
15:09:31.376 INFO  [] ServletRegistrationBean.onStartup:190 Mapping servlet: 'dispatcherServlet' to [/]
15:09:31.516 INFO  [] LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory:334 Building JPA container EntityManagerFactory for persistence unit 'default'
15:09:31.536 INFO  [] LogHelper.logPersistenceUnitInformation:31 HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15:09:31.591 INFO  [] Version.logVersion:37 HHH000412: Hibernate Core {5.0.9.Final}
15:09:31.591 INFO  [] Environment.<clinit>:213 HHH000206: hibernate.properties not found
15:09:31.591 INFO  [] Environment.buildBytecodeProvider:317 HHH000021: Bytecode provider name : javassist
15:09:31.621 INFO  [] JavaReflectionManager.<clinit>:66 HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
15:09:31.981 INFO  [] Dialect.<init>:156 HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
15:09:32.111 INFO  [] SchemaValidator.validate:69 HHH000229: Running schema validator
15:09:32.131 INFO  [] AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory:382 Initialized JPA EntityManagerFactory for persistence unit 'default'
15:09:32.181 WARN  [] ServiceInstance.init:87 Instance name is empty, IP[10.1.113.233] will instead of it.
15:09:32.551 INFO  [] RequestMappingHandlerAdapter.initControllerAdviceCache:534 Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2abf4075: startup date [Wed Sep 27 15:09:29 CST 2017]; root of context hierarchy
15:09:32.609 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/api/dataDictionaryDetail.do]}" onto public org.springframework.web.context.request.async.DeferredResult<?> com.dashuf.kafka.api.KafkaTestApi.dataDictionaryDetail(java.lang.String)
15:09:32.609 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
15:09:32.609 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:09:32.639 INFO  [] AbstractUrlHandlerMapping.registerHandler:354 Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:09:32.639 INFO  [] AbstractUrlHandlerMapping.registerHandler:354 Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:09:32.669 INFO  [] AbstractUrlHandlerMapping.registerHandler:354 Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:09:32.929 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:09:32.929 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/health || /health.json],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal)
15:09:32.929 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
15:09:32.929 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:09:32.929 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
15:09:32.929 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:09:32.929 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
15:09:32.929 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/info || /info.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:09:32.929 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:09:32.929 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:09:32.929 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:09:32.929 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:09:32.929 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
15:09:32.929 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/env || /env.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:09:33.079 WARN  [] RedisStarterDeprecationWarningAutoConfiguration.logWarning:43 spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
15:09:33.129 INFO  [] MBeanExporter.afterSingletonsInstantiated:431 Registering beans for JMX exposure on startup
15:09:33.139 INFO  [] DefaultLifecycleProcessor$LifecycleGroup.start:341 Starting beans in phase 0
15:09:33.149 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:09:33.179 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = consumer-1
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:09:33.189 INFO  [] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:09:33.189 INFO  [] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:09:33.189 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:09:33.189 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = consumer-2
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:09:33.199 INFO  [] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:09:33.199 INFO  [] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:09:33.199 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:09:33.199 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = consumer-3
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:09:33.199 INFO  [] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:09:33.199 INFO  [] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:09:33.209 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:09:33.209 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = consumer-4
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:09:33.209 INFO  [] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:09:33.209 INFO  [] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:09:33.209 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:09:33.209 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = consumer-5
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:09:33.209 INFO  [] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:09:33.209 INFO  [] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:09:33.299 INFO  [] UndertowEmbeddedServletContainer.start:214 Undertow started on port(s) 9051 (http)
15:09:33.309 INFO  [] StartupInfoLogger.logStarted:57 Started Runner in 4.271 seconds (JVM running for 4.549)
15:09:33.309 WARN  [] NetworkClient$DefaultMetadataUpdater.handleResponse:600 Error while fetching metadata with correlation id 1 : {KafKaTestApiTestEnd=LEADER_NOT_AVAILABLE}
15:09:33.309 WARN  [] NetworkClient$DefaultMetadataUpdater.handleResponse:600 Error while fetching metadata with correlation id 1 : {KafKaTestApiTestEnd=LEADER_NOT_AVAILABLE}
15:09:33.309 INFO  [] AbstractCoordinator.handleGroupMetadataResponse:505 Discovered coordinator 10.1.105.30:9092 (id: 2147483647 rack: null) for group Spring_boot_kafka_test2.10.1.113.233.
15:09:33.309 INFO  [] AbstractCoordinator.handleGroupMetadataResponse:505 Discovered coordinator 10.1.105.30:9092 (id: 2147483647 rack: null) for group Spring_boot_kafka_test2.10.1.113.233.
15:09:33.309 WARN  [] NetworkClient$DefaultMetadataUpdater.handleResponse:600 Error while fetching metadata with correlation id 1 : {KafKaTestApiTestEnd=LEADER_NOT_AVAILABLE}
15:09:33.309 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:09:33.309 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:09:33.309 INFO  [] AbstractCoordinator.handleGroupMetadataResponse:505 Discovered coordinator 10.1.105.30:9092 (id: 2147483647 rack: null) for group Spring_boot_kafka_test2.10.1.113.233.
15:09:33.309 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[]
15:09:33.309 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[]
15:09:33.309 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:09:33.309 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:09:33.309 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:09:33.309 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[]
15:09:33.309 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:09:33.319 INFO  [] AbstractCoordinator.handleGroupMetadataResponse:505 Discovered coordinator 10.1.105.30:9092 (id: 2147483647 rack: null) for group Spring_boot_kafka_test2.10.1.113.233.
15:09:33.319 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:09:33.319 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[]
15:09:33.319 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:09:33.399 WARN  [] NetworkClient$DefaultMetadataUpdater.handleResponse:600 Error while fetching metadata with correlation id 1 : {KafKaTestApiTestEnd=LEADER_NOT_AVAILABLE}
15:09:33.399 WARN  [] NetworkClient$DefaultMetadataUpdater.handleResponse:600 Error while fetching metadata with correlation id 1 : {KafKaTestApiTestEnd=LEADER_NOT_AVAILABLE}
15:09:33.399 INFO  [] AbstractCoordinator.handleGroupMetadataResponse:505 Discovered coordinator 10.1.105.30:9092 (id: 2147483647 rack: null) for group Spring_boot_kafka_test2.10.1.113.233.
15:09:33.399 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:09:33.399 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[]
15:09:33.399 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:09:33.585 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:09:33.599 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 2
15:09:33.599 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 2
15:09:33.599 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:09:33.599 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:09:33.599 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[]
15:09:33.599 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[]
15:09:33.599 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 2
15:09:33.599 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 2
15:09:33.599 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 2
15:09:33.599 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:09:33.599 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:09:33.599 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:09:33.599 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[]
15:09:33.599 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[]
15:09:33.599 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[]
15:09:43.056 INFO  [T=ff05qiAlj8Y1P3rtDU4c5Y] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@51018808}']
15:09:43.056 INFO  [T=ff05qiAlj8Y1P3rtDU4c5Y] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=ff05qiAlj8Y1P3rtDU4c5Y]
15:09:43.061 INFO  [T=ff05qiAlj8Y1P3rtDU4c5Y] ServletContextImpl.log:313 Initializing Spring FrameworkServlet 'dispatcherServlet'
15:09:43.062 INFO  [T=ff05qiAlj8Y1P3rtDU4c5Y] FrameworkServlet.initServletBean:489 FrameworkServlet 'dispatcherServlet': initialization started
15:09:43.074 INFO  [T=ff05qiAlj8Y1P3rtDU4c5Y] FrameworkServlet.initServletBean:508 FrameworkServlet 'dispatcherServlet': initialization completed in 12 ms
15:09:43.168 INFO  [T=ff05qiAlj8Y1P3rtDU4c5Y] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:09:43.194 INFO  [T=ff05qiAlj8Y1P3rtDU4c5Y] AbstractConfig.logAll:178 ProducerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	sasl.mechanism = GSSAPI
	max.block.ms = 60000
	interceptor.classes = null
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	request.timeout.ms = 30000
	acks = 1
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	retries = 0
	ssl.truststore.location = null
	ssl.keystore.password = null
	send.buffer.bytes = 131072
	compression.type = none
	metadata.fetch.timeout.ms = 60000
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	buffer.memory = 33554432
	timeout.ms = 30000
	key.serializer = class org.apache.kafka.common.serialization.IntegerSerializer
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	block.on.buffer.full = false
	ssl.key.password = null
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	max.in.flight.requests.per.connection = 5
	metrics.num.samples = 2
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	batch.size = 16384
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	max.request.size = 1048576
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	linger.ms = 1

15:09:43.203 INFO  [T=ff05qiAlj8Y1P3rtDU4c5Y] AbstractConfig.logAll:178 ProducerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	sasl.mechanism = GSSAPI
	max.block.ms = 60000
	interceptor.classes = null
	ssl.truststore.password = null
	client.id = producer-1
	ssl.endpoint.identification.algorithm = null
	request.timeout.ms = 30000
	acks = 1
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	retries = 0
	ssl.truststore.location = null
	ssl.keystore.password = null
	send.buffer.bytes = 131072
	compression.type = none
	metadata.fetch.timeout.ms = 60000
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	buffer.memory = 33554432
	timeout.ms = 30000
	key.serializer = class org.apache.kafka.common.serialization.IntegerSerializer
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	block.on.buffer.full = false
	ssl.key.password = null
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	max.in.flight.requests.per.connection = 5
	metrics.num.samples = 2
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	batch.size = 16384
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	max.request.size = 1048576
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	linger.ms = 1

15:09:43.204 INFO  [T=ff05qiAlj8Y1P3rtDU4c5Y] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:09:43.204 INFO  [T=ff05qiAlj8Y1P3rtDU4c5Y] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:09:43.358 INFO  [T=ff05qiAlj8Y1P3rtDU4c5Y] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[302ms] Response[content:null]
15:10:47.171 INFO  [] StartupInfoLogger.logStarting:48 Starting Runner on DS-TS-0358 with PID 7772 (D:\Workspace\spring_boot_kafka_test2\bin started by ex-songdeshun in D:\Workspace\spring_boot_kafka_test2)
15:10:47.187 INFO  [] SpringApplication.logStartupProfileInfo:659 No active profile set, falling back to default profiles: default
15:10:47.234 INFO  [] AbstractApplicationContext.prepareRefresh:581 Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@487db668: startup date [Wed Sep 27 15:10:47 CST 2017]; root of context hierarchy
15:10:48.322 INFO  [] RepositoryConfigurationDelegate.multipleStoresDetected:166 Multiple Spring Data modules found, entering strict repository configuration mode!
15:10:48.369 INFO  [] RepositoryConfigurationDelegate.multipleStoresDetected:166 Multiple Spring Data modules found, entering strict repository configuration mode!
15:10:48.608 INFO  [] PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 Bean 'com.dashuf.core.common.configuration.CommonConfiguration' of type [class com.dashuf.core.common.configuration.CommonConfiguration$$EnhancerBySpringCGLIB$$9936107c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:10:48.618 INFO  [] PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 Bean 'com.dashuf.core.event.configuration.EventConfiguration' of type [class com.dashuf.core.event.configuration.EventConfiguration$$EnhancerBySpringCGLIB$$f66ff4b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:10:48.628 INFO  [] PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [class org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$ca127859] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:10:48.718 INFO  [] PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f66066d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:10:49.108 INFO  [] Xnio.<clinit>:99 XNIO version 3.3.6.Final
15:10:49.125 INFO  [] NioXnio.<clinit>:55 XNIO NIO Implementation Version 3.3.6.Final
15:10:49.200 WARN  [] Bootstrap.handleDeployment:67 UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
15:10:49.200 WARN  [] Bootstrap.handleDeployment:76 UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
15:10:49.214 INFO  [] ServletContextImpl.log:313 Initializing Spring embedded WebApplicationContext
15:10:49.215 INFO  [] EmbeddedWebApplicationContext.prepareEmbeddedWebApplicationContext:276 Root WebApplicationContext: initialization completed in 1981 ms
15:10:49.475 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'metricFilter' to: [/*]
15:10:49.476 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'characterEncodingFilter' to: [/*]
15:10:49.477 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
15:10:49.478 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'httpPutFormContentFilter' to: [/*]
15:10:49.478 INFO  [] AbstractFilterRegistrationBean.configure:271 Mapping filter: 'contextFilter' to urls: [*.do, /api/*]
15:10:49.479 INFO  [] AbstractFilterRegistrationBean.configure:271 Mapping filter: 'logFilter' to urls: [*.do, /api/*]
15:10:49.479 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'requestContextFilter' to: [/*]
15:10:49.480 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'webRequestLoggingFilter' to: [/*]
15:10:49.480 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'applicationContextIdFilter' to: [/*]
15:10:49.480 INFO  [] ServletRegistrationBean.onStartup:190 Mapping servlet: 'dispatcherServlet' to [/]
15:10:49.880 INFO  [] LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory:334 Building JPA container EntityManagerFactory for persistence unit 'default'
15:10:49.895 INFO  [] LogHelper.logPersistenceUnitInformation:31 HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15:10:49.965 INFO  [] Version.logVersion:37 HHH000412: Hibernate Core {5.0.9.Final}
15:10:49.966 INFO  [] Environment.<clinit>:213 HHH000206: hibernate.properties not found
15:10:49.967 INFO  [] Environment.buildBytecodeProvider:317 HHH000021: Bytecode provider name : javassist
15:10:50.005 INFO  [] JavaReflectionManager.<clinit>:66 HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
15:10:50.373 INFO  [] Dialect.<init>:156 HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
15:10:50.523 INFO  [] SchemaValidator.validate:69 HHH000229: Running schema validator
15:10:50.555 INFO  [] AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory:382 Initialized JPA EntityManagerFactory for persistence unit 'default'
15:10:50.615 WARN  [] ServiceInstance.init:87 Instance name is empty, IP[10.1.113.233] will instead of it.
15:10:51.165 INFO  [] RequestMappingHandlerAdapter.initControllerAdviceCache:534 Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@487db668: startup date [Wed Sep 27 15:10:47 CST 2017]; root of context hierarchy
15:10:51.245 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/api/dataDictionaryDetail.do]}" onto public org.springframework.web.context.request.async.DeferredResult<?> com.dashuf.kafka.api.KafkaTestApi.dataDictionaryDetail(java.lang.String)
15:10:51.245 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
15:10:51.245 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:10:51.295 INFO  [] AbstractUrlHandlerMapping.registerHandler:354 Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:10:51.295 INFO  [] AbstractUrlHandlerMapping.registerHandler:354 Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:10:51.355 INFO  [] AbstractUrlHandlerMapping.registerHandler:354 Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:10:51.759 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
15:10:51.762 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:51.763 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:51.763 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:51.763 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/health || /health.json],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal)
15:10:51.763 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
15:10:51.763 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
15:10:51.763 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/env || /env.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:51.763 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:51.763 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:51.763 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/info || /info.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:51.763 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
15:10:51.763 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:51.763 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:10:52.023 WARN  [] RedisStarterDeprecationWarningAutoConfiguration.logWarning:43 spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
15:10:52.193 INFO  [] MBeanExporter.afterSingletonsInstantiated:431 Registering beans for JMX exposure on startup
15:10:52.193 INFO  [] DefaultLifecycleProcessor$LifecycleGroup.start:341 Starting beans in phase 0
15:10:52.213 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:10:52.233 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = consumer-1
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:10:52.253 INFO  [] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:10:52.253 INFO  [] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:10:52.253 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:10:52.263 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = consumer-2
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:10:52.263 INFO  [] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:10:52.263 INFO  [] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:10:52.263 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:10:52.263 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = consumer-3
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:10:52.273 INFO  [] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:10:52.273 INFO  [] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:10:52.273 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:10:52.273 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = consumer-4
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:10:52.273 INFO  [] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:10:52.283 INFO  [] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:10:52.283 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:10:52.283 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = consumer-5
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:10:52.283 INFO  [] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:10:52.283 INFO  [] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:10:52.313 INFO  [] AbstractCoordinator.handleGroupMetadataResponse:505 Discovered coordinator 10.1.105.30:9092 (id: 2147483647 rack: null) for group Spring_boot_kafka_test2.10.1.113.233.
15:10:52.313 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:10:52.313 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[]
15:10:52.313 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:10:52.393 INFO  [] AbstractCoordinator.handleGroupMetadataResponse:505 Discovered coordinator 10.1.105.30:9092 (id: 2147483647 rack: null) for group Spring_boot_kafka_test2.10.1.113.233.
15:10:52.393 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:10:52.393 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[]
15:10:52.393 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:10:52.393 INFO  [] AbstractCoordinator.handleGroupMetadataResponse:505 Discovered coordinator 10.1.105.30:9092 (id: 2147483647 rack: null) for group Spring_boot_kafka_test2.10.1.113.233.
15:10:52.393 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:10:52.393 INFO  [] AbstractCoordinator.handleGroupMetadataResponse:505 Discovered coordinator 10.1.105.30:9092 (id: 2147483647 rack: null) for group Spring_boot_kafka_test2.10.1.113.233.
15:10:52.393 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[]
15:10:52.393 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:10:52.393 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:10:52.393 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[]
15:10:52.393 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:10:52.403 INFO  [] UndertowEmbeddedServletContainer.start:214 Undertow started on port(s) 9051 (http)
15:10:52.403 INFO  [] StartupInfoLogger.logStarted:57 Started Runner in 5.613 seconds (JVM running for 6.051)
15:10:52.413 INFO  [] AbstractCoordinator.handleGroupMetadataResponse:505 Discovered coordinator 10.1.105.30:9092 (id: 2147483647 rack: null) for group Spring_boot_kafka_test2.10.1.113.233.
15:10:52.413 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:10:52.413 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[]
15:10:52.413 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:10:54.666 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 3
15:10:54.666 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 3
15:10:54.666 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 3
15:10:54.666 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 3
15:10:54.666 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 3
15:10:54.681 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:10:54.681 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:10:54.681 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [KafKaTestApiTestEnd-0] for group Spring_boot_kafka_test2.10.1.113.233
15:10:54.681 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [KafKaTestApiTestEnd-1] for group Spring_boot_kafka_test2.10.1.113.233
15:10:54.681 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [KafKaTestApiTestEnd-2] for group Spring_boot_kafka_test2.10.1.113.233
15:10:54.683 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[]
15:10:54.683 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[]
15:10:54.683 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[KafKaTestApiTestEnd-2]
15:10:54.683 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[KafKaTestApiTestEnd-0]
15:10:54.698 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[KafKaTestApiTestEnd-1]
15:11:42.728 INFO  [T=czcSR1sCvbXeNgsnht05n2] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@291bc9dd}']
15:11:42.728 INFO  [T=czcSR1sCvbXeNgsnht05n2] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=czcSR1sCvbXeNgsnht05n2]
15:11:42.734 INFO  [T=czcSR1sCvbXeNgsnht05n2] ServletContextImpl.log:313 Initializing Spring FrameworkServlet 'dispatcherServlet'
15:11:42.734 INFO  [T=czcSR1sCvbXeNgsnht05n2] FrameworkServlet.initServletBean:489 FrameworkServlet 'dispatcherServlet': initialization started
15:11:42.749 INFO  [T=czcSR1sCvbXeNgsnht05n2] FrameworkServlet.initServletBean:508 FrameworkServlet 'dispatcherServlet': initialization completed in 15 ms
15:11:45.698 INFO  [T=czcSR1sCvbXeNgsnht05n2] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:11:45.735 INFO  [T=czcSR1sCvbXeNgsnht05n2] AbstractConfig.logAll:178 ProducerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	sasl.mechanism = GSSAPI
	max.block.ms = 60000
	interceptor.classes = null
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	request.timeout.ms = 30000
	acks = 1
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	retries = 0
	ssl.truststore.location = null
	ssl.keystore.password = null
	send.buffer.bytes = 131072
	compression.type = none
	metadata.fetch.timeout.ms = 60000
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	buffer.memory = 33554432
	timeout.ms = 30000
	key.serializer = class org.apache.kafka.common.serialization.IntegerSerializer
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	block.on.buffer.full = false
	ssl.key.password = null
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	max.in.flight.requests.per.connection = 5
	metrics.num.samples = 2
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	batch.size = 16384
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	max.request.size = 1048576
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	linger.ms = 1

15:11:45.752 INFO  [T=czcSR1sCvbXeNgsnht05n2] AbstractConfig.logAll:178 ProducerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	sasl.mechanism = GSSAPI
	max.block.ms = 60000
	interceptor.classes = null
	ssl.truststore.password = null
	client.id = producer-1
	ssl.endpoint.identification.algorithm = null
	request.timeout.ms = 30000
	acks = 1
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	retries = 0
	ssl.truststore.location = null
	ssl.keystore.password = null
	send.buffer.bytes = 131072
	compression.type = none
	metadata.fetch.timeout.ms = 60000
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	buffer.memory = 33554432
	timeout.ms = 30000
	key.serializer = class org.apache.kafka.common.serialization.IntegerSerializer
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	block.on.buffer.full = false
	ssl.key.password = null
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	max.in.flight.requests.per.connection = 5
	metrics.num.samples = 2
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	batch.size = 16384
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	max.request.size = 1048576
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	linger.ms = 1

15:11:45.755 INFO  [T=czcSR1sCvbXeNgsnht05n2] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:11:45.756 INFO  [T=czcSR1sCvbXeNgsnht05n2] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:11:45.866 INFO  [T=czcSR1sCvbXeNgsnht05n2] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3139ms] Response[content:null]
15:11:46.193 INFO  [T=cNMRD0uDbs5boL8e7XMFzj] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:11:46.193 INFO  [T=cNMRD0uDbs5boL8e7XMFzj] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dsAmT7hknvTlthYZKue9Rl, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=gj0WwDrgOmBjxOzWmod2lV, sourceId=czcSR1sCvbXeNgsnht05n2, scenario=KafKaTestApiTestBegin]
15:11:47.225 INFO  [T=cNMRD0uDbs5boL8e7XMFzj] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:11:47.225 INFO  [T=cNMRD0uDbs5boL8e7XMFzj] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1032ms] Result[{"soleCode":"DS01"}]
15:11:51.653 INFO  [T=g2yrksF4XytgBPGmWBvz8M] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@42b7a7c3}']
15:11:51.653 INFO  [T=g2yrksF4XytgBPGmWBvz8M] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=g2yrksF4XytgBPGmWBvz8M]
15:11:54.032 INFO  [T=g2yrksF4XytgBPGmWBvz8M] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:11:54.038 INFO  [T=g2yrksF4XytgBPGmWBvz8M] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2384ms] Response[content:null]
15:11:54.055 INFO  [T=f0y0XnaRz1rc7vjTkydXyw] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:11:54.055 INFO  [T=f0y0XnaRz1rc7vjTkydXyw] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=bHZ8cqBkkDB9hGOh44k5cd, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=c9FJikRPBFY864hqy5NfYL, sourceId=g2yrksF4XytgBPGmWBvz8M, scenario=KafKaTestApiTestBegin]
15:11:54.752 INFO  [T=f0y0XnaRz1rc7vjTkydXyw] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:11:54.753 INFO  [T=f0y0XnaRz1rc7vjTkydXyw] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[698ms] Result[{"soleCode":"DS01"}]
15:12:00.710 INFO  [T=dHqDjP3yxbE1a0IUhMsWSy] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@7b568711}']
15:12:00.710 INFO  [T=dHqDjP3yxbE1a0IUhMsWSy] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dHqDjP3yxbE1a0IUhMsWSy]
15:12:00.715 INFO  [T=dHqDjP3yxbE1a0IUhMsWSy] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:00.716 INFO  [T=dHqDjP3yxbE1a0IUhMsWSy] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[6ms] Response[content:null]
15:12:00.728 INFO  [T=eWaVK6T5NtR40Mbw010twr] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:00.728 INFO  [T=eWaVK6T5NtR40Mbw010twr] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=ccxL1tU4DFO5ZsdvyhBTJi, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=frFxmHlaEszc3tm1Ta1U3o, sourceId=dHqDjP3yxbE1a0IUhMsWSy, scenario=KafKaTestApiTestBegin]
15:12:00.728 INFO  [T=eWaVK6T5NtR40Mbw010twr] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:00.728 INFO  [T=eWaVK6T5NtR40Mbw010twr] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:12:01.229 INFO  [T=crRVPb2RgvffFfcv6eQGGN] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@736fc082}']
15:12:01.229 INFO  [T=crRVPb2RgvffFfcv6eQGGN] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=crRVPb2RgvffFfcv6eQGGN]
15:12:01.232 INFO  [T=crRVPb2RgvffFfcv6eQGGN] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:01.232 INFO  [T=crRVPb2RgvffFfcv6eQGGN] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:12:01.239 INFO  [T=fXikHgiMYo5goVEzdjx342] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:01.239 INFO  [T=fXikHgiMYo5goVEzdjx342] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=fkuKJgyhr7ekd7Wl74co6Y, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=cY3NzfvSxi63n1qE8rAazz, sourceId=crRVPb2RgvffFfcv6eQGGN, scenario=KafKaTestApiTestBegin]
15:12:01.240 INFO  [T=fXikHgiMYo5goVEzdjx342] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:01.240 INFO  [T=fXikHgiMYo5goVEzdjx342] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:12:01.388 INFO  [T=btAxxdfQOhS6T8nCkYBbLU] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@640dd7e8}']
15:12:01.388 INFO  [T=btAxxdfQOhS6T8nCkYBbLU] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=btAxxdfQOhS6T8nCkYBbLU]
15:12:01.391 INFO  [T=btAxxdfQOhS6T8nCkYBbLU] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:01.393 INFO  [T=btAxxdfQOhS6T8nCkYBbLU] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[5ms] Response[content:null]
15:12:01.404 INFO  [T=bKXb7JhyiJLiRpJpiW6K09] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:01.404 INFO  [T=bKXb7JhyiJLiRpJpiW6K09] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=cKNMCP5amb3f1thXgvYDfY, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=d8KumNDQtux9GIEcRbdieD, sourceId=btAxxdfQOhS6T8nCkYBbLU, scenario=KafKaTestApiTestBegin]
15:12:01.404 INFO  [T=bKXb7JhyiJLiRpJpiW6K09] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:01.404 INFO  [T=bKXb7JhyiJLiRpJpiW6K09] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:12:01.565 INFO  [T=bSxc4Dy25ITlkVq0DORUD8] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@7c0dc318}']
15:12:01.567 INFO  [T=bSxc4Dy25ITlkVq0DORUD8] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=bSxc4Dy25ITlkVq0DORUD8]
15:12:01.574 INFO  [T=bSxc4Dy25ITlkVq0DORUD8] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:01.575 INFO  [T=bSxc4Dy25ITlkVq0DORUD8] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[11ms] Response[content:null]
15:12:01.588 INFO  [T=boU2JJjevdogYXEIxAzUGq] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:01.588 INFO  [T=boU2JJjevdogYXEIxAzUGq] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=cZFp2dBtPdz8puM7U3zVac, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=fmOpnRGZV450Y57dVdZL0X, sourceId=bSxc4Dy25ITlkVq0DORUD8, scenario=KafKaTestApiTestBegin]
15:12:01.588 INFO  [T=boU2JJjevdogYXEIxAzUGq] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:01.588 INFO  [T=boU2JJjevdogYXEIxAzUGq] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:12:01.716 INFO  [T=fTOsoQ3FxEy0inLUVEnOmf] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@5f28fe6e}']
15:12:01.717 INFO  [T=fTOsoQ3FxEy0inLUVEnOmf] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=fTOsoQ3FxEy0inLUVEnOmf]
15:12:01.720 INFO  [T=fTOsoQ3FxEy0inLUVEnOmf] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:01.721 INFO  [T=fTOsoQ3FxEy0inLUVEnOmf] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[5ms] Response[content:null]
15:12:01.726 INFO  [T=dNcOMh61z2S9XIqoCtYipA] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:01.726 INFO  [T=dNcOMh61z2S9XIqoCtYipA] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dJU889K1WekgWLQqGFJN57, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=g6Cp3HJOT2F4ONEd2hSonI, sourceId=fTOsoQ3FxEy0inLUVEnOmf, scenario=KafKaTestApiTestBegin]
15:12:01.726 INFO  [T=dNcOMh61z2S9XIqoCtYipA] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:01.727 INFO  [T=dNcOMh61z2S9XIqoCtYipA] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:12:01.877 INFO  [T=dHwz1lFNtYV601jK7G35Wd] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@242b4deb}']
15:12:01.877 INFO  [T=dHwz1lFNtYV601jK7G35Wd] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dHwz1lFNtYV601jK7G35Wd]
15:12:01.880 INFO  [T=dHwz1lFNtYV601jK7G35Wd] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:01.881 INFO  [T=dHwz1lFNtYV601jK7G35Wd] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[5ms] Response[content:null]
15:12:01.889 INFO  [T=e7q6AgbGcKT5tqZlp3irPk] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:01.889 INFO  [T=e7q6AgbGcKT5tqZlp3irPk] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=f81IB6EAQwFf01wdphxZGi, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=dAYsHg8vkJy8IokWdt7FW1, sourceId=dHwz1lFNtYV601jK7G35Wd, scenario=KafKaTestApiTestBegin]
15:12:01.889 INFO  [T=e7q6AgbGcKT5tqZlp3irPk] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:01.889 INFO  [T=e7q6AgbGcKT5tqZlp3irPk] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:12:02.054 INFO  [T=e3REpwa7OmI4qTUGd4qJP6] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@7cf13be4}']
15:12:02.055 INFO  [T=e3REpwa7OmI4qTUGd4qJP6] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=e3REpwa7OmI4qTUGd4qJP6]
15:12:02.059 INFO  [T=e3REpwa7OmI4qTUGd4qJP6] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:02.060 INFO  [T=e3REpwa7OmI4qTUGd4qJP6] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[6ms] Response[content:null]
15:12:02.068 INFO  [T=f7mz4urQV2p04xp1bpgtDF] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:02.068 INFO  [T=f7mz4urQV2p04xp1bpgtDF] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dYTTEosxjPslWoDW11dM5g, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=cVql592OnlK4y2oXS1J3Fk, sourceId=e3REpwa7OmI4qTUGd4qJP6, scenario=KafKaTestApiTestBegin]
15:12:02.068 INFO  [T=f7mz4urQV2p04xp1bpgtDF] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:02.068 INFO  [T=f7mz4urQV2p04xp1bpgtDF] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:12:02.223 INFO  [T=g499OGPO8m0hUgUjRaMSAs] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@34259fb9}']
15:12:02.224 INFO  [T=g499OGPO8m0hUgUjRaMSAs] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=g499OGPO8m0hUgUjRaMSAs]
15:12:02.228 INFO  [T=g499OGPO8m0hUgUjRaMSAs] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:02.228 INFO  [T=g499OGPO8m0hUgUjRaMSAs] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[5ms] Response[content:null]
15:12:02.237 INFO  [T=fkkUE80xFeB6w0JYt1Y1Vj] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:02.238 INFO  [T=fkkUE80xFeB6w0JYt1Y1Vj] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=djMGsmNi6MU2D3I6kgJyDA, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=bQzs0rw6VyJ3Le0Ozqox6Z, sourceId=g499OGPO8m0hUgUjRaMSAs, scenario=KafKaTestApiTestBegin]
15:12:02.238 INFO  [T=fkkUE80xFeB6w0JYt1Y1Vj] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:02.238 INFO  [T=fkkUE80xFeB6w0JYt1Y1Vj] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:12:02.408 INFO  [T=dIgz8v7bTnG41pQVgJVTlc] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@6d9e3c6c}']
15:12:02.408 INFO  [T=dIgz8v7bTnG41pQVgJVTlc] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dIgz8v7bTnG41pQVgJVTlc]
15:12:02.410 INFO  [T=dIgz8v7bTnG41pQVgJVTlc] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:02.411 INFO  [T=dIgz8v7bTnG41pQVgJVTlc] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:12:02.420 INFO  [T=fGc70vdXpTWbK9YcQ2pAsW] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:02.420 INFO  [T=fGc70vdXpTWbK9YcQ2pAsW] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dKsM3vt3Cy6e8oHsxfFvDp, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=efOt0JaeiBY9604oWOj6rI, sourceId=dIgz8v7bTnG41pQVgJVTlc, scenario=KafKaTestApiTestBegin]
15:12:02.421 INFO  [T=fGc70vdXpTWbK9YcQ2pAsW] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:02.421 INFO  [T=fGc70vdXpTWbK9YcQ2pAsW] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:12:02.566 INFO  [T=dD1lzTvyaHegRKtO4KoHej] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@2223759c}']
15:12:02.566 INFO  [T=dD1lzTvyaHegRKtO4KoHej] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dD1lzTvyaHegRKtO4KoHej]
15:12:02.570 INFO  [T=dD1lzTvyaHegRKtO4KoHej] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:02.572 INFO  [T=dD1lzTvyaHegRKtO4KoHej] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[6ms] Response[content:null]
15:12:02.580 INFO  [T=cyjEo6X60CgjlFBwxn7dR1] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:02.580 INFO  [T=cyjEo6X60CgjlFBwxn7dR1] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=fkgPsQEOa541TxvrESXE5B, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=cSLxJTa2tz55savKIrcKH5, sourceId=dD1lzTvyaHegRKtO4KoHej, scenario=KafKaTestApiTestBegin]
15:12:02.580 INFO  [T=cyjEo6X60CgjlFBwxn7dR1] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:02.580 INFO  [T=cyjEo6X60CgjlFBwxn7dR1] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:12:03.709 INFO  [T=dCpgcU9kKmygy9nGquw240] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@72bb7c0b}']
15:12:03.710 INFO  [T=dCpgcU9kKmygy9nGquw240] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dCpgcU9kKmygy9nGquw240]
15:12:03.713 INFO  [T=dCpgcU9kKmygy9nGquw240] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:03.714 INFO  [T=dCpgcU9kKmygy9nGquw240] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[5ms] Response[content:null]
15:12:03.723 INFO  [T=ehaaLT2S83Pk4fzhjSLRFd] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:03.723 INFO  [T=ehaaLT2S83Pk4fzhjSLRFd] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=esFDVUs3vvPchmOqpk7S6X, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=bG2AEFmHacqcHvwWCCFqYt, sourceId=dCpgcU9kKmygy9nGquw240, scenario=KafKaTestApiTestBegin]
15:12:03.724 INFO  [T=ehaaLT2S83Pk4fzhjSLRFd] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:03.724 INFO  [T=ehaaLT2S83Pk4fzhjSLRFd] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:12:03.884 INFO  [T=eEDN4ULk7zj1EPdUMue88v] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@7a4b8ddd}']
15:12:03.884 INFO  [T=eEDN4ULk7zj1EPdUMue88v] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=eEDN4ULk7zj1EPdUMue88v]
15:12:03.887 INFO  [T=eEDN4ULk7zj1EPdUMue88v] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:03.888 INFO  [T=eEDN4ULk7zj1EPdUMue88v] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[4ms] Response[content:null]
15:12:03.906 INFO  [T=cavLHYu0lFp9YLIUKeOKie] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:03.906 INFO  [T=cavLHYu0lFp9YLIUKeOKie] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=d9i1NGoKxWUaofA9HOWY6k, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=cq8vk8uAeIZ9RKjxp8AFd9, sourceId=eEDN4ULk7zj1EPdUMue88v, scenario=KafKaTestApiTestBegin]
15:12:03.906 INFO  [T=cavLHYu0lFp9YLIUKeOKie] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:03.906 INFO  [T=cavLHYu0lFp9YLIUKeOKie] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:12:04.060 INFO  [T=bMPnu9Uurnige58JtJR7d0] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@1ba33e7e}']
15:12:04.061 INFO  [T=bMPnu9Uurnige58JtJR7d0] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=bMPnu9Uurnige58JtJR7d0]
15:12:04.063 INFO  [T=bMPnu9Uurnige58JtJR7d0] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:04.064 INFO  [T=bMPnu9Uurnige58JtJR7d0] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[4ms] Response[content:null]
15:12:04.072 INFO  [T=bpUjkBO304AkUTtUl4DK0V] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:04.072 INFO  [T=bpUjkBO304AkUTtUl4DK0V] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=cS2fdSFHHvIddR4QuXkOBo, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=fzqgyWpCIx363HuYUg2UC5, sourceId=bMPnu9Uurnige58JtJR7d0, scenario=KafKaTestApiTestBegin]
15:12:04.072 INFO  [T=bpUjkBO304AkUTtUl4DK0V] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:04.073 INFO  [T=bpUjkBO304AkUTtUl4DK0V] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:12:04.227 INFO  [T=dzs6UP8Z50Pf5HGmjYzYYx] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@24ee622f}']
15:12:04.227 INFO  [T=dzs6UP8Z50Pf5HGmjYzYYx] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dzs6UP8Z50Pf5HGmjYzYYx]
15:12:04.229 INFO  [T=dzs6UP8Z50Pf5HGmjYzYYx] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:04.230 INFO  [T=dzs6UP8Z50Pf5HGmjYzYYx] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:12:04.238 INFO  [T=d07ldvK7YldjpuQITU5aLj] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:04.238 INFO  [T=d07ldvK7YldjpuQITU5aLj] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=bRrW07CwTaVhCuujfZsqnP, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=ggrTDyzJFeKds4gtYjTjNf, sourceId=dzs6UP8Z50Pf5HGmjYzYYx, scenario=KafKaTestApiTestBegin]
15:12:04.238 INFO  [T=d07ldvK7YldjpuQITU5aLj] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:04.238 INFO  [T=d07ldvK7YldjpuQITU5aLj] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:12:04.396 INFO  [T=gph5O65sxYd19dC7JubStI] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@ed109e8}']
15:12:04.396 INFO  [T=gph5O65sxYd19dC7JubStI] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=gph5O65sxYd19dC7JubStI]
15:12:04.398 INFO  [T=gph5O65sxYd19dC7JubStI] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:04.399 INFO  [T=gph5O65sxYd19dC7JubStI] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:12:04.407 INFO  [T=fmJEOXW0tzS0KlDHYv3ghD] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:04.407 INFO  [T=fmJEOXW0tzS0KlDHYv3ghD] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dtcvqLf9DJJhDKQhSvbBEp, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=f8wE03etyQi9pzHL5S0lkm, sourceId=gph5O65sxYd19dC7JubStI, scenario=KafKaTestApiTestBegin]
15:12:04.407 INFO  [T=fmJEOXW0tzS0KlDHYv3ghD] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:04.407 INFO  [T=fmJEOXW0tzS0KlDHYv3ghD] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:12:04.574 INFO  [T=evTLBsuczyn2iY5zPNfXvc] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@7ddf9fd}']
15:12:04.575 INFO  [T=evTLBsuczyn2iY5zPNfXvc] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=evTLBsuczyn2iY5zPNfXvc]
15:12:04.577 INFO  [T=evTLBsuczyn2iY5zPNfXvc] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:04.578 INFO  [T=evTLBsuczyn2iY5zPNfXvc] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[4ms] Response[content:null]
15:12:04.584 INFO  [T=b6cy70NsXvw6zrC8KGRqah] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:04.584 INFO  [T=b6cy70NsXvw6zrC8KGRqah] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=fZtqbyUYENEgq1lgoxD6vv, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=fnaQBUTc4hAgeCtGaLTebR, sourceId=evTLBsuczyn2iY5zPNfXvc, scenario=KafKaTestApiTestBegin]
15:12:04.584 INFO  [T=b6cy70NsXvw6zrC8KGRqah] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:04.584 INFO  [T=b6cy70NsXvw6zrC8KGRqah] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:12:04.739 INFO  [T=dL5E0p0Cjcpa3xpffyvn45] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@6759e887}']
15:12:04.740 INFO  [T=dL5E0p0Cjcpa3xpffyvn45] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dL5E0p0Cjcpa3xpffyvn45]
15:12:04.741 INFO  [T=dL5E0p0Cjcpa3xpffyvn45] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:04.742 INFO  [T=dL5E0p0Cjcpa3xpffyvn45] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:12:04.747 INFO  [T=dX8xmSFjetGj6p7IThdhWO] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:04.747 INFO  [T=dX8xmSFjetGj6p7IThdhWO] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=en1UvIRld1B5GvFBeYXAXf, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=fOBItDhNdRnfSg8VAQwXFs, sourceId=dL5E0p0Cjcpa3xpffyvn45, scenario=KafKaTestApiTestBegin]
15:12:04.747 INFO  [T=dX8xmSFjetGj6p7IThdhWO] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:04.748 INFO  [T=dX8xmSFjetGj6p7IThdhWO] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:12:04.912 INFO  [T=cVn2zPa1ed4jSBiCWAWcl5] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@17d12c32}']
15:12:04.912 INFO  [T=cVn2zPa1ed4jSBiCWAWcl5] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=cVn2zPa1ed4jSBiCWAWcl5]
15:12:04.914 INFO  [T=cVn2zPa1ed4jSBiCWAWcl5] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:04.915 INFO  [T=cVn2zPa1ed4jSBiCWAWcl5] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:12:04.923 INFO  [T=dkskVYCc6thkTPTCW3yyR5] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:04.923 INFO  [T=dkskVYCc6thkTPTCW3yyR5] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=eS4P4akldKQ8e9EKeM36dP, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=e4tcwaCqE3VcmI8Lhi7Jyo, sourceId=cVn2zPa1ed4jSBiCWAWcl5, scenario=KafKaTestApiTestBegin]
15:12:04.923 INFO  [T=dkskVYCc6thkTPTCW3yyR5] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:04.923 INFO  [T=dkskVYCc6thkTPTCW3yyR5] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:12:05.076 INFO  [T=cVggJgkvsEM4hemxbDpZa3] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@5cb8ec60}']
15:12:05.077 INFO  [T=cVggJgkvsEM4hemxbDpZa3] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=cVggJgkvsEM4hemxbDpZa3]
15:12:05.081 INFO  [T=cVggJgkvsEM4hemxbDpZa3] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:05.085 INFO  [T=cVggJgkvsEM4hemxbDpZa3] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[9ms] Response[content:null]
15:12:05.094 INFO  [T=dBrw0H8Yt2h99ze7khtPPm] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:05.095 INFO  [T=dBrw0H8Yt2h99ze7khtPPm] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=bNFKlUx53PAd4LTuB6mNkh, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=e4cgZdqKP6E96iof66CG4o, sourceId=cVggJgkvsEM4hemxbDpZa3, scenario=KafKaTestApiTestBegin]
15:12:05.095 INFO  [T=dBrw0H8Yt2h99ze7khtPPm] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:05.095 INFO  [T=dBrw0H8Yt2h99ze7khtPPm] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:12:05.244 INFO  [T=cPIqnLVZ4XFigvDTycCvo4] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@11a63a08}']
15:12:05.245 INFO  [T=cPIqnLVZ4XFigvDTycCvo4] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=cPIqnLVZ4XFigvDTycCvo4]
15:12:05.247 INFO  [T=cPIqnLVZ4XFigvDTycCvo4] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:05.248 INFO  [T=cPIqnLVZ4XFigvDTycCvo4] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[4ms] Response[content:null]
15:12:05.255 INFO  [T=cwJsbwrzAp7lzgX9DlNmPL] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:05.256 INFO  [T=cwJsbwrzAp7lzgX9DlNmPL] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dx4AgVqLlGRjGxH0dkzlUP, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=bd5Kr2btON2eNFJiijKkfM, sourceId=cPIqnLVZ4XFigvDTycCvo4, scenario=KafKaTestApiTestBegin]
15:12:05.256 INFO  [T=cwJsbwrzAp7lzgX9DlNmPL] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:05.256 INFO  [T=cwJsbwrzAp7lzgX9DlNmPL] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:12:05.412 INFO  [T=ddhdpyMp9B2cgcQKLthz98] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@60798547}']
15:12:05.412 INFO  [T=ddhdpyMp9B2cgcQKLthz98] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=ddhdpyMp9B2cgcQKLthz98]
15:12:05.413 INFO  [T=ddhdpyMp9B2cgcQKLthz98] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:05.414 INFO  [T=ddhdpyMp9B2cgcQKLthz98] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:12:05.424 INFO  [T=d4LvUACftcagaDkbPegQnE] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:05.424 INFO  [T=d4LvUACftcagaDkbPegQnE] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=eCd26PVznDG7xJFSEieKUG, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=cFlXtdF6Ou6j6c4j6qE2rO, sourceId=ddhdpyMp9B2cgcQKLthz98, scenario=KafKaTestApiTestBegin]
15:12:05.424 INFO  [T=d4LvUACftcagaDkbPegQnE] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:05.424 INFO  [T=d4LvUACftcagaDkbPegQnE] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:12:05.604 INFO  [T=bEBMFpbdnqkk2KrRyDJMNV] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@6f401fb8}']
15:12:05.604 INFO  [T=bEBMFpbdnqkk2KrRyDJMNV] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=bEBMFpbdnqkk2KrRyDJMNV]
15:12:05.605 INFO  [T=bEBMFpbdnqkk2KrRyDJMNV] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:05.606 INFO  [T=bEBMFpbdnqkk2KrRyDJMNV] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:12:05.613 INFO  [T=bzYSPZ0LtfCbwwP6bIwCPW] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:05.614 INFO  [T=bzYSPZ0LtfCbwwP6bIwCPW] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dLxa4retHxKfiDsGC5h0Tp, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=b32IWlIxpZK4N8Mxrynw3J, sourceId=bEBMFpbdnqkk2KrRyDJMNV, scenario=KafKaTestApiTestBegin]
15:12:05.614 INFO  [T=bzYSPZ0LtfCbwwP6bIwCPW] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:05.614 INFO  [T=bzYSPZ0LtfCbwwP6bIwCPW] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:12:05.789 INFO  [T=gsyZaFQGV0tg4H3JE4eQA2] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@1ff25fce}']
15:12:05.789 INFO  [T=gsyZaFQGV0tg4H3JE4eQA2] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=gsyZaFQGV0tg4H3JE4eQA2]
15:12:05.791 INFO  [T=gsyZaFQGV0tg4H3JE4eQA2] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:05.793 INFO  [T=gsyZaFQGV0tg4H3JE4eQA2] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:12:05.978 INFO  [T=c0EzYP2a5EKa8rLl9jwqUi] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@49ef9668}']
15:12:05.979 INFO  [T=c0EzYP2a5EKa8rLl9jwqUi] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=c0EzYP2a5EKa8rLl9jwqUi]
15:12:05.980 INFO  [T=c0EzYP2a5EKa8rLl9jwqUi] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:05.981 INFO  [T=c0EzYP2a5EKa8rLl9jwqUi] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:12:06.164 INFO  [T=dPgHfvzAbQM1mujIXGKSDB] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@60bd5087}']
15:12:06.164 INFO  [T=dPgHfvzAbQM1mujIXGKSDB] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dPgHfvzAbQM1mujIXGKSDB]
15:12:06.165 INFO  [T=dPgHfvzAbQM1mujIXGKSDB] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:06.166 INFO  [T=dPgHfvzAbQM1mujIXGKSDB] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:12:06.167 INFO  [T=eKTQaXVSVYe2ydUv2KSlqG] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:06.167 INFO  [T=eKTQaXVSVYe2ydUv2KSlqG] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=fytJLJzW1jke2ROactaZ3y, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=fRO7T22a1aJjvKY9hNIYKp, sourceId=gsyZaFQGV0tg4H3JE4eQA2, scenario=KafKaTestApiTestBegin]
15:12:06.167 INFO  [T=eKTQaXVSVYe2ydUv2KSlqG] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:06.167 INFO  [T=eKTQaXVSVYe2ydUv2KSlqG] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:12:06.178 INFO  [T=gihiyg7F3Gx3Ksnxj1DVdj] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:06.178 INFO  [T=gihiyg7F3Gx3Ksnxj1DVdj] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=bu7C4qegYDg3LgGwkzsbaX, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=fx85Jo4GILGlfsNDodJ9DY, sourceId=dPgHfvzAbQM1mujIXGKSDB, scenario=KafKaTestApiTestBegin]
15:12:06.179 INFO  [T=gihiyg7F3Gx3Ksnxj1DVdj] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:06.179 INFO  [T=gihiyg7F3Gx3Ksnxj1DVdj] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:12:06.199 INFO  [T=bZVXu4TLDzUhe8aMHGxB0J] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:06.199 INFO  [T=bZVXu4TLDzUhe8aMHGxB0J] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dXNh52OkrleccPr1GIizk4, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=cXSUAOQIAPtft28rVGktFy, sourceId=c0EzYP2a5EKa8rLl9jwqUi, scenario=KafKaTestApiTestBegin]
15:12:06.199 INFO  [T=bZVXu4TLDzUhe8aMHGxB0J] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:06.199 INFO  [T=bZVXu4TLDzUhe8aMHGxB0J] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:12:06.339 INFO  [T=dUyWyAJ13Aq89Ur12Rggqk] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@59e3d5cb}']
15:12:06.340 INFO  [T=dUyWyAJ13Aq89Ur12Rggqk] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dUyWyAJ13Aq89Ur12Rggqk]
15:12:06.341 INFO  [T=dUyWyAJ13Aq89Ur12Rggqk] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:12:06.343 INFO  [T=dUyWyAJ13Aq89Ur12Rggqk] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[4ms] Response[content:null]
15:12:06.352 INFO  [T=dG9klVZdpJi59i7pZ22rhP] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:12:06.352 INFO  [T=dG9klVZdpJi59i7pZ22rhP] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=bv1hXLZciDG1DP8mk861zc, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=eLul5xI22t9bp2EufG3GgR, sourceId=dUyWyAJ13Aq89Ur12Rggqk, scenario=KafKaTestApiTestBegin]
15:12:06.353 INFO  [T=dG9klVZdpJi59i7pZ22rhP] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:12:06.353 INFO  [T=dG9klVZdpJi59i7pZ22rhP] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:41.092 INFO  [T=eZVvdbGilUncOM75x8nKr9] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@70212d4a}']
15:14:41.092 INFO  [T=eZVvdbGilUncOM75x8nKr9] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=eZVvdbGilUncOM75x8nKr9]
15:14:41.096 INFO  [T=eZVvdbGilUncOM75x8nKr9] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:41.096 INFO  [T=eZVvdbGilUncOM75x8nKr9] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[4ms] Response[content:null]
15:14:41.663 INFO  [T=e3MZC6Ep5g76o64NuhpHoi] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:41.663 INFO  [T=e3MZC6Ep5g76o64NuhpHoi] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dSiTrfy31oo0lIiVYfDmf6, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=egkLtYOqKBmf4bH18UJxrc, sourceId=eZVvdbGilUncOM75x8nKr9, scenario=KafKaTestApiTestBegin]
15:14:41.664 INFO  [T=e3MZC6Ep5g76o64NuhpHoi] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:41.664 INFO  [T=e3MZC6Ep5g76o64NuhpHoi] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:41.899 INFO  [T=cBmeLjcjnKPeP3F5xqgMqm] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@6da0e26e}']
15:14:41.899 INFO  [T=cBmeLjcjnKPeP3F5xqgMqm] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=cBmeLjcjnKPeP3F5xqgMqm]
15:14:41.900 INFO  [T=cBmeLjcjnKPeP3F5xqgMqm] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:41.901 INFO  [T=cBmeLjcjnKPeP3F5xqgMqm] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:41.909 INFO  [T=e9sgWj9tUm89qrZP6bslhD] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:41.910 INFO  [T=e9sgWj9tUm89qrZP6bslhD] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=bY99xj5sVwjbgFowenqRtx, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=d6AaYo0Jbcj3Agg00L8ngX, sourceId=cBmeLjcjnKPeP3F5xqgMqm, scenario=KafKaTestApiTestBegin]
15:14:41.910 INFO  [T=e9sgWj9tUm89qrZP6bslhD] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:41.910 INFO  [T=e9sgWj9tUm89qrZP6bslhD] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:42.290 INFO  [T=eqNdByrQBMVerLbJQLFKUW] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@23a5bafd}']
15:14:42.290 INFO  [T=eqNdByrQBMVerLbJQLFKUW] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=eqNdByrQBMVerLbJQLFKUW]
15:14:42.291 INFO  [T=eqNdByrQBMVerLbJQLFKUW] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:42.292 INFO  [T=eqNdByrQBMVerLbJQLFKUW] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:42.298 INFO  [T=cXJfoMZVa71iI8lN6AhjuM] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:42.298 INFO  [T=cXJfoMZVa71iI8lN6AhjuM] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=cafrcKTID9zcsGTo15Y0Mt, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=fPFP6ezyElb53lrXAc50fA, sourceId=eqNdByrQBMVerLbJQLFKUW, scenario=KafKaTestApiTestBegin]
15:14:42.298 INFO  [T=cXJfoMZVa71iI8lN6AhjuM] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:42.298 INFO  [T=cXJfoMZVa71iI8lN6AhjuM] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:42.484 INFO  [T=eXxHNcqjG564dgLLYgpTe0] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@1b4478ea}']
15:14:42.484 INFO  [T=eXxHNcqjG564dgLLYgpTe0] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=eXxHNcqjG564dgLLYgpTe0]
15:14:42.487 INFO  [T=eXxHNcqjG564dgLLYgpTe0] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:42.488 INFO  [T=eXxHNcqjG564dgLLYgpTe0] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[4ms] Response[content:null]
15:14:42.500 INFO  [T=e6qPoDnKMbLcDsrcVAvOjB] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:42.500 INFO  [T=e6qPoDnKMbLcDsrcVAvOjB] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=d6CH2NhmBFekxTnpc3BXU0, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=dgYUY3S11j7lomfDPjipll, sourceId=eXxHNcqjG564dgLLYgpTe0, scenario=KafKaTestApiTestBegin]
15:14:42.500 INFO  [T=e6qPoDnKMbLcDsrcVAvOjB] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:42.500 INFO  [T=e6qPoDnKMbLcDsrcVAvOjB] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:42.635 INFO  [T=eCSbc2vLjwf96ieGbjr7iq] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@46878fea}']
15:14:42.635 INFO  [T=eCSbc2vLjwf96ieGbjr7iq] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=eCSbc2vLjwf96ieGbjr7iq]
15:14:42.636 INFO  [T=eCSbc2vLjwf96ieGbjr7iq] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:42.638 INFO  [T=eCSbc2vLjwf96ieGbjr7iq] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:42.645 INFO  [T=e0LnzpuhRuhlDYYpMCZFl8] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:42.645 INFO  [T=e0LnzpuhRuhlDYYpMCZFl8] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=gjjNNRHtkF6a3vibVtEgUQ, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=eIkLKa09khjlmetwZq8vCy, sourceId=eCSbc2vLjwf96ieGbjr7iq, scenario=KafKaTestApiTestBegin]
15:14:42.645 INFO  [T=e0LnzpuhRuhlDYYpMCZFl8] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:42.645 INFO  [T=e0LnzpuhRuhlDYYpMCZFl8] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:42.803 INFO  [T=gbAu3pJSyD26i2Wiwmc8a7] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@2c2217c6}']
15:14:42.803 INFO  [T=gbAu3pJSyD26i2Wiwmc8a7] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=gbAu3pJSyD26i2Wiwmc8a7]
15:14:42.804 INFO  [T=gbAu3pJSyD26i2Wiwmc8a7] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:42.805 INFO  [T=gbAu3pJSyD26i2Wiwmc8a7] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:42.812 INFO  [T=d6685g3RHPs0qdq7M0kWQ9] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:42.813 INFO  [T=d6685g3RHPs0qdq7M0kWQ9] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dN8lHDZ9qj6iHl4m0GNxfl, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=cFAudvgY0x74YAF0lzB1jX, sourceId=gbAu3pJSyD26i2Wiwmc8a7, scenario=KafKaTestApiTestBegin]
15:14:42.813 INFO  [T=d6685g3RHPs0qdq7M0kWQ9] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:42.813 INFO  [T=d6685g3RHPs0qdq7M0kWQ9] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:42.966 INFO  [T=dz0a5MFJba6ciGshv0x2Dn] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@1112c5d5}']
15:14:42.966 INFO  [T=dz0a5MFJba6ciGshv0x2Dn] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dz0a5MFJba6ciGshv0x2Dn]
15:14:42.968 INFO  [T=dz0a5MFJba6ciGshv0x2Dn] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:42.970 INFO  [T=dz0a5MFJba6ciGshv0x2Dn] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[4ms] Response[content:null]
15:14:42.979 INFO  [T=ctFKf7DkQC4j78czvV4f8b] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:42.980 INFO  [T=ctFKf7DkQC4j78czvV4f8b] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dIoY90cz4XQiS0h6MtpEoz, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=bOBQtUQe6CtdQEHFIRBFCX, sourceId=dz0a5MFJba6ciGshv0x2Dn, scenario=KafKaTestApiTestBegin]
15:14:42.980 INFO  [T=ctFKf7DkQC4j78czvV4f8b] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:42.980 INFO  [T=ctFKf7DkQC4j78czvV4f8b] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:43.133 INFO  [T=boEwC2qMYaClqOkkp3Z5sl] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@6ba70db5}']
15:14:43.134 INFO  [T=boEwC2qMYaClqOkkp3Z5sl] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=boEwC2qMYaClqOkkp3Z5sl]
15:14:43.135 INFO  [T=boEwC2qMYaClqOkkp3Z5sl] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:43.136 INFO  [T=boEwC2qMYaClqOkkp3Z5sl] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:43.143 INFO  [T=cNPUMZVFDQrlMpNw3MrfGF] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:43.143 INFO  [T=cNPUMZVFDQrlMpNw3MrfGF] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=fJnSlm1isOdg7XSz0TZ8dF, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=f8zy7TJLKT54uKnoB6GuDW, sourceId=boEwC2qMYaClqOkkp3Z5sl, scenario=KafKaTestApiTestBegin]
15:14:43.143 INFO  [T=cNPUMZVFDQrlMpNw3MrfGF] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:43.143 INFO  [T=cNPUMZVFDQrlMpNw3MrfGF] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:43.290 INFO  [T=bLIkIPoV9QRgvEj5j0KlU7] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@30f340a9}']
15:14:43.290 INFO  [T=bLIkIPoV9QRgvEj5j0KlU7] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=bLIkIPoV9QRgvEj5j0KlU7]
15:14:43.291 INFO  [T=bLIkIPoV9QRgvEj5j0KlU7] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:43.292 INFO  [T=bLIkIPoV9QRgvEj5j0KlU7] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:43.459 INFO  [T=eLhJHMLuE1wcOvLAU9stJh] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:43.459 INFO  [T=eLhJHMLuE1wcOvLAU9stJh] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=ciF2ENIGSJFh7O3yaq5xVp, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=eHIjGJ9alLBlIKrixQd83I, sourceId=bLIkIPoV9QRgvEj5j0KlU7, scenario=KafKaTestApiTestBegin]
15:14:43.459 INFO  [T=eLhJHMLuE1wcOvLAU9stJh] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:43.459 INFO  [T=eLhJHMLuE1wcOvLAU9stJh] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:43.811 INFO  [T=d0QM2PcBbOk7ZePtQhneVl] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@5ff392b9}']
15:14:43.811 INFO  [T=d0QM2PcBbOk7ZePtQhneVl] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=d0QM2PcBbOk7ZePtQhneVl]
15:14:43.812 INFO  [T=d0QM2PcBbOk7ZePtQhneVl] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:43.813 INFO  [T=d0QM2PcBbOk7ZePtQhneVl] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:43.821 INFO  [T=bEHhafa1oZJaZWjmJjz4tz] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:43.821 INFO  [T=bEHhafa1oZJaZWjmJjz4tz] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=fsvdQgA4TCiaqxOl1IrgoL, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=eh6PL2u6EJki0OReecGfi1, sourceId=d0QM2PcBbOk7ZePtQhneVl, scenario=KafKaTestApiTestBegin]
15:14:43.821 INFO  [T=bEHhafa1oZJaZWjmJjz4tz] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:43.821 INFO  [T=bEHhafa1oZJaZWjmJjz4tz] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:44.105 INFO  [T=dlQbkqDCQlBhkzwwijhfQC] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@42e73b12}']
15:14:44.105 INFO  [T=dlQbkqDCQlBhkzwwijhfQC] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dlQbkqDCQlBhkzwwijhfQC]
15:14:44.107 INFO  [T=dlQbkqDCQlBhkzwwijhfQC] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:44.107 INFO  [T=dlQbkqDCQlBhkzwwijhfQC] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:44.116 INFO  [T=eJT5hMUua1d9EoE9IIEzDL] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:44.116 INFO  [T=eJT5hMUua1d9EoE9IIEzDL] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=cvGTHG0obDl5Fixwh0gCZq, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=eXx0frKE2PucUPHxFa8dmo, sourceId=dlQbkqDCQlBhkzwwijhfQC, scenario=KafKaTestApiTestBegin]
15:14:44.116 INFO  [T=eJT5hMUua1d9EoE9IIEzDL] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:44.116 INFO  [T=eJT5hMUua1d9EoE9IIEzDL] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:44.322 INFO  [T=bqVTev7z99VdwWntID8Kat] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@6b2560b6}']
15:14:44.323 INFO  [T=bqVTev7z99VdwWntID8Kat] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=bqVTev7z99VdwWntID8Kat]
15:14:44.324 INFO  [T=bqVTev7z99VdwWntID8Kat] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:44.325 INFO  [T=bqVTev7z99VdwWntID8Kat] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:44.331 INFO  [T=fPrXKmhTYHDaL5AflI3JFI] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:44.332 INFO  [T=fPrXKmhTYHDaL5AflI3JFI] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=cPogMUchEec7hxvxRv8uZM, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=bqroQxKyZxQ7lQLpfp34Q4, sourceId=bqVTev7z99VdwWntID8Kat, scenario=KafKaTestApiTestBegin]
15:14:44.332 INFO  [T=fPrXKmhTYHDaL5AflI3JFI] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:44.332 INFO  [T=fPrXKmhTYHDaL5AflI3JFI] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:44.507 INFO  [T=fSdKvifa3HD71aW3JmI6Hi] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@76a4cc89}']
15:14:44.507 INFO  [T=fSdKvifa3HD71aW3JmI6Hi] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=fSdKvifa3HD71aW3JmI6Hi]
15:14:44.508 INFO  [T=fSdKvifa3HD71aW3JmI6Hi] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:44.509 INFO  [T=fSdKvifa3HD71aW3JmI6Hi] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:44.516 INFO  [T=ft7pn8hcjIuaaFDOIzkm8X] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:44.516 INFO  [T=ft7pn8hcjIuaaFDOIzkm8X] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=bLMtmfoMztreefWOGWlMoS, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=f0HGXDmvtO40c6B9jgwqK3, sourceId=fSdKvifa3HD71aW3JmI6Hi, scenario=KafKaTestApiTestBegin]
15:14:44.516 INFO  [T=ft7pn8hcjIuaaFDOIzkm8X] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:44.516 INFO  [T=ft7pn8hcjIuaaFDOIzkm8X] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:44.674 INFO  [T=ecM6syZaH9tfkGJuiZEr44] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@145d443}']
15:14:44.674 INFO  [T=ecM6syZaH9tfkGJuiZEr44] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=ecM6syZaH9tfkGJuiZEr44]
15:14:44.675 INFO  [T=ecM6syZaH9tfkGJuiZEr44] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:44.676 INFO  [T=ecM6syZaH9tfkGJuiZEr44] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:44.685 INFO  [T=gaPyUIcnCnnfSi0RDfq3ix] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:44.686 INFO  [T=gaPyUIcnCnnfSi0RDfq3ix] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=es5MO52AYDEeeZULfNFYgE, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=epaVKB9Yvom3NB0lDdf7xc, sourceId=ecM6syZaH9tfkGJuiZEr44, scenario=KafKaTestApiTestBegin]
15:14:44.686 INFO  [T=gaPyUIcnCnnfSi0RDfq3ix] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:44.686 INFO  [T=gaPyUIcnCnnfSi0RDfq3ix] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:44.834 INFO  [T=dbxcOM6oJ53hv9waWOWYrc] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@40d61b}']
15:14:44.834 INFO  [T=dbxcOM6oJ53hv9waWOWYrc] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dbxcOM6oJ53hv9waWOWYrc]
15:14:44.836 INFO  [T=dbxcOM6oJ53hv9waWOWYrc] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:44.837 INFO  [T=dbxcOM6oJ53hv9waWOWYrc] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:44.843 INFO  [T=east5uAAAINa8ZnHFR467v] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:44.844 INFO  [T=east5uAAAINa8ZnHFR467v] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dN8f5v7KaWvclkATDVpvgF, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=c7AzwYutFUn7z9YWHhSZSW, sourceId=dbxcOM6oJ53hv9waWOWYrc, scenario=KafKaTestApiTestBegin]
15:14:44.844 INFO  [T=east5uAAAINa8ZnHFR467v] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:44.844 INFO  [T=east5uAAAINa8ZnHFR467v] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:44.993 INFO  [T=dm3hsaw7EZReylBVp0yJqr] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@5d8360a0}']
15:14:44.993 INFO  [T=dm3hsaw7EZReylBVp0yJqr] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dm3hsaw7EZReylBVp0yJqr]
15:14:44.994 INFO  [T=dm3hsaw7EZReylBVp0yJqr] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:44.995 INFO  [T=dm3hsaw7EZReylBVp0yJqr] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:45.003 INFO  [T=eQtwujgLD402noiIYD3ziT] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:45.004 INFO  [T=eQtwujgLD402noiIYD3ziT] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dTJ7TVQC3cSj4M8QZzIfyF, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=eEdnBTGbvhp0f61Cj1fdFy, sourceId=dm3hsaw7EZReylBVp0yJqr, scenario=KafKaTestApiTestBegin]
15:14:45.004 INFO  [T=eQtwujgLD402noiIYD3ziT] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:45.004 INFO  [T=eQtwujgLD402noiIYD3ziT] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:45.153 INFO  [T=c0lHLw8Nh0P80rABPifmcK] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@3726bf21}']
15:14:45.153 INFO  [T=c0lHLw8Nh0P80rABPifmcK] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=c0lHLw8Nh0P80rABPifmcK]
15:14:45.156 INFO  [T=c0lHLw8Nh0P80rABPifmcK] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:45.157 INFO  [T=c0lHLw8Nh0P80rABPifmcK] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[4ms] Response[content:null]
15:14:45.163 INFO  [T=fHTW1qr7vN04bqxa8D649N] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:45.163 INFO  [T=fHTW1qr7vN04bqxa8D649N] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=fjymN2CkiWM5YAsTv96jx9, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=cd0L0eSIky12fQScZMD0IN, sourceId=c0lHLw8Nh0P80rABPifmcK, scenario=KafKaTestApiTestBegin]
15:14:45.164 INFO  [T=fHTW1qr7vN04bqxa8D649N] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:45.164 INFO  [T=fHTW1qr7vN04bqxa8D649N] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:45.338 INFO  [T=cZdZcLCF3mee2p2rUenR9O] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@1f2041eb}']
15:14:45.339 INFO  [T=cZdZcLCF3mee2p2rUenR9O] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=cZdZcLCF3mee2p2rUenR9O]
15:14:45.344 INFO  [T=cZdZcLCF3mee2p2rUenR9O] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:45.345 INFO  [T=cZdZcLCF3mee2p2rUenR9O] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[7ms] Response[content:null]
15:14:45.484 INFO  [T=f46Wlq4gdUJgIbgXDheFAU] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:45.484 INFO  [T=f46Wlq4gdUJgIbgXDheFAU] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=di5v0AExnbp7nfdDCOFrH4, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=ea6GZvUOQkx0r7rhXRXR9j, sourceId=cZdZcLCF3mee2p2rUenR9O, scenario=KafKaTestApiTestBegin]
15:14:45.485 INFO  [T=f46Wlq4gdUJgIbgXDheFAU] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:45.485 INFO  [T=f46Wlq4gdUJgIbgXDheFAU] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:45.507 INFO  [T=eBouPCZzvdRbysqMDdjAyq] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@70a3652a}']
15:14:45.507 INFO  [T=eBouPCZzvdRbysqMDdjAyq] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=eBouPCZzvdRbysqMDdjAyq]
15:14:45.508 INFO  [T=eBouPCZzvdRbysqMDdjAyq] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:45.509 INFO  [T=eBouPCZzvdRbysqMDdjAyq] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[1ms] Response[content:null]
15:14:45.516 INFO  [T=dxbpf9GuUWVeMso1EAugRF] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:45.516 INFO  [T=dxbpf9GuUWVeMso1EAugRF] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=bgXTmO0UZbFewYzXZOhMHO, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=bk1itNCARqF6G5rAbqOzyA, sourceId=eBouPCZzvdRbysqMDdjAyq, scenario=KafKaTestApiTestBegin]
15:14:45.516 INFO  [T=dxbpf9GuUWVeMso1EAugRF] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:45.516 INFO  [T=dxbpf9GuUWVeMso1EAugRF] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:45.682 INFO  [T=cJeVuyCTwLn8YVIbzSlNp3] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@6005c047}']
15:14:45.682 INFO  [T=cJeVuyCTwLn8YVIbzSlNp3] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=cJeVuyCTwLn8YVIbzSlNp3]
15:14:45.683 INFO  [T=cJeVuyCTwLn8YVIbzSlNp3] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:45.684 INFO  [T=cJeVuyCTwLn8YVIbzSlNp3] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:45.693 INFO  [T=cLPbmgyX61J7OLstcrdBDf] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:45.694 INFO  [T=cLPbmgyX61J7OLstcrdBDf] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=gqEoIGopkxK8TdPTkI26LD, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=bie4QmwnCo64SEPJ64wovB, sourceId=cJeVuyCTwLn8YVIbzSlNp3, scenario=KafKaTestApiTestBegin]
15:14:45.694 INFO  [T=cLPbmgyX61J7OLstcrdBDf] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:45.694 INFO  [T=cLPbmgyX61J7OLstcrdBDf] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:45.866 INFO  [T=ePbe8qz3rQ0dJEdDsjV4ou] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@3942bf84}']
15:14:45.866 INFO  [T=ePbe8qz3rQ0dJEdDsjV4ou] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=ePbe8qz3rQ0dJEdDsjV4ou]
15:14:45.867 INFO  [T=ePbe8qz3rQ0dJEdDsjV4ou] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:45.868 INFO  [T=ePbe8qz3rQ0dJEdDsjV4ou] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:45.875 INFO  [T=dHXNYhUP3A2hTC3BSaSeR4] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:45.876 INFO  [T=dHXNYhUP3A2hTC3BSaSeR4] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=czjLsJUoS5R3BMALDRTlS8, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=c4ELQr05g662kvYeyRDWHH, sourceId=ePbe8qz3rQ0dJEdDsjV4ou, scenario=KafKaTestApiTestBegin]
15:14:45.876 INFO  [T=dHXNYhUP3A2hTC3BSaSeR4] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:45.876 INFO  [T=dHXNYhUP3A2hTC3BSaSeR4] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:46.036 INFO  [T=e1g57K7efYD6pg98kDOxLH] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@47b333fd}']
15:14:46.037 INFO  [T=e1g57K7efYD6pg98kDOxLH] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=e1g57K7efYD6pg98kDOxLH]
15:14:46.040 INFO  [T=e1g57K7efYD6pg98kDOxLH] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:46.042 INFO  [T=e1g57K7efYD6pg98kDOxLH] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[5ms] Response[content:null]
15:14:46.051 INFO  [T=eLbO8GAM18FlHeKuszHzKj] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:46.052 INFO  [T=eLbO8GAM18FlHeKuszHzKj] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=enPX0y2uq3C4jf9ewNDxh7, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=bdQ6IZIRiLs0oWDwxw7BjZ, sourceId=e1g57K7efYD6pg98kDOxLH, scenario=KafKaTestApiTestBegin]
15:14:46.052 INFO  [T=eLbO8GAM18FlHeKuszHzKj] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:46.052 INFO  [T=eLbO8GAM18FlHeKuszHzKj] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:46.195 INFO  [T=dvTFWsWRLfy3bcOrdu0KuA] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@205d17a5}']
15:14:46.195 INFO  [T=dvTFWsWRLfy3bcOrdu0KuA] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dvTFWsWRLfy3bcOrdu0KuA]
15:14:46.196 INFO  [T=dvTFWsWRLfy3bcOrdu0KuA] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:46.197 INFO  [T=dvTFWsWRLfy3bcOrdu0KuA] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:46.205 INFO  [T=e8Xa0ETTxPGfsxVKTh0JAd] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:46.205 INFO  [T=e8Xa0ETTxPGfsxVKTh0JAd] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=ef4Ny3eKLP1jaQuqW1F1z5, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=bv9rHdIO7MH1Oaaq06vQJY, sourceId=dvTFWsWRLfy3bcOrdu0KuA, scenario=KafKaTestApiTestBegin]
15:14:46.206 INFO  [T=e8Xa0ETTxPGfsxVKTh0JAd] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:46.206 INFO  [T=e8Xa0ETTxPGfsxVKTh0JAd] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:46.371 INFO  [T=cITocS4AyflbTVUMBmiXl1] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@96c864}']
15:14:46.371 INFO  [T=cITocS4AyflbTVUMBmiXl1] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=cITocS4AyflbTVUMBmiXl1]
15:14:46.373 INFO  [T=cITocS4AyflbTVUMBmiXl1] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:46.374 INFO  [T=cITocS4AyflbTVUMBmiXl1] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:46.382 INFO  [T=e66prVXNKeL9jKxpnMg2He] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:46.383 INFO  [T=e66prVXNKeL9jKxpnMg2He] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=eaqhOiRtHhm6FFn4TP57CP, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=d4aRv3Hmv851ibDX4zVNgE, sourceId=cITocS4AyflbTVUMBmiXl1, scenario=KafKaTestApiTestBegin]
15:14:46.383 INFO  [T=e66prVXNKeL9jKxpnMg2He] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:46.383 INFO  [T=e66prVXNKeL9jKxpnMg2He] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:46.544 INFO  [T=bMoTqgau5WmkKslWRA53KR] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@4605cd08}']
15:14:46.544 INFO  [T=bMoTqgau5WmkKslWRA53KR] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=bMoTqgau5WmkKslWRA53KR]
15:14:46.545 INFO  [T=bMoTqgau5WmkKslWRA53KR] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:46.547 INFO  [T=bMoTqgau5WmkKslWRA53KR] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:46.558 INFO  [T=dWiiiPBSzBdkETWjGBIKcN] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:46.558 INFO  [T=dWiiiPBSzBdkETWjGBIKcN] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=fqW1uaUydFseh38pFar0yZ, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=fuPLBGXC4M8bG6gryCPyL5, sourceId=bMoTqgau5WmkKslWRA53KR, scenario=KafKaTestApiTestBegin]
15:14:46.558 INFO  [T=dWiiiPBSzBdkETWjGBIKcN] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:46.558 INFO  [T=dWiiiPBSzBdkETWjGBIKcN] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:46.714 INFO  [T=dLqMesT5Zt29VkcO8GKKRC] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@8823658}']
15:14:46.714 INFO  [T=dLqMesT5Zt29VkcO8GKKRC] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dLqMesT5Zt29VkcO8GKKRC]
15:14:46.715 INFO  [T=dLqMesT5Zt29VkcO8GKKRC] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:46.716 INFO  [T=dLqMesT5Zt29VkcO8GKKRC] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:46.725 INFO  [T=dYlREgOQt2dkqxSCOfHM66] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:46.725 INFO  [T=dYlREgOQt2dkqxSCOfHM66] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=etgJL1CxnO56KclMgpjtna, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=c8ItfHsjWOI2Bkx0OCgO06, sourceId=dLqMesT5Zt29VkcO8GKKRC, scenario=KafKaTestApiTestBegin]
15:14:46.725 INFO  [T=dYlREgOQt2dkqxSCOfHM66] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:46.725 INFO  [T=dYlREgOQt2dkqxSCOfHM66] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:46.898 INFO  [T=epTJpVwzhwT1IVY41Cdv0k] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@7e0adbce}']
15:14:46.899 INFO  [T=epTJpVwzhwT1IVY41Cdv0k] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=epTJpVwzhwT1IVY41Cdv0k]
15:14:46.902 INFO  [T=epTJpVwzhwT1IVY41Cdv0k] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:46.904 INFO  [T=epTJpVwzhwT1IVY41Cdv0k] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[6ms] Response[content:null]
15:14:46.911 INFO  [T=exS23SnaEZa9YP3AcKSO5g] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:46.911 INFO  [T=exS23SnaEZa9YP3AcKSO5g] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=e7LXa7dSJVDgjRbbiI3Hyb, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=crFSv1UKezgkCIb43hHxLU, sourceId=epTJpVwzhwT1IVY41Cdv0k, scenario=KafKaTestApiTestBegin]
15:14:46.912 INFO  [T=exS23SnaEZa9YP3AcKSO5g] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:46.912 INFO  [T=exS23SnaEZa9YP3AcKSO5g] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:47.058 INFO  [T=fbvR5fIjRNe6l0g4s4HGeS] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@222a5f16}']
15:14:47.059 INFO  [T=fbvR5fIjRNe6l0g4s4HGeS] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=fbvR5fIjRNe6l0g4s4HGeS]
15:14:47.060 INFO  [T=fbvR5fIjRNe6l0g4s4HGeS] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:47.061 INFO  [T=fbvR5fIjRNe6l0g4s4HGeS] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:47.071 INFO  [T=be9TCBQMGlqeJEeKElS35r] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:47.071 INFO  [T=be9TCBQMGlqeJEeKElS35r] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=doRdXyJ4LAlew33sIWqhUQ, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=fq03knZenL7dB1NVulBbc0, sourceId=fbvR5fIjRNe6l0g4s4HGeS, scenario=KafKaTestApiTestBegin]
15:14:47.072 INFO  [T=be9TCBQMGlqeJEeKElS35r] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:47.072 INFO  [T=be9TCBQMGlqeJEeKElS35r] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:47.234 INFO  [T=cEpek581LnAeDm3BWRz8wj] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@4fe8906b}']
15:14:47.235 INFO  [T=cEpek581LnAeDm3BWRz8wj] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=cEpek581LnAeDm3BWRz8wj]
15:14:47.236 INFO  [T=cEpek581LnAeDm3BWRz8wj] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:47.237 INFO  [T=cEpek581LnAeDm3BWRz8wj] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:47.245 INFO  [T=bBUlTOrvGeO87FBiC2ptu1] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:47.245 INFO  [T=bBUlTOrvGeO87FBiC2ptu1] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=bAZW850ozkNjKo3jQ8SevM, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=d5TZV81AwYCdH0VdA2izEA, sourceId=cEpek581LnAeDm3BWRz8wj, scenario=KafKaTestApiTestBegin]
15:14:47.245 INFO  [T=bBUlTOrvGeO87FBiC2ptu1] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:47.245 INFO  [T=bBUlTOrvGeO87FBiC2ptu1] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:47.410 INFO  [T=bXclemzkrjuls1nY3voDws] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@42e22a22}']
15:14:47.410 INFO  [T=bXclemzkrjuls1nY3voDws] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=bXclemzkrjuls1nY3voDws]
15:14:47.411 INFO  [T=bXclemzkrjuls1nY3voDws] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:47.412 INFO  [T=bXclemzkrjuls1nY3voDws] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:47.419 INFO  [T=eqma8t4uBmbfxhSKMWABtq] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:47.419 INFO  [T=eqma8t4uBmbfxhSKMWABtq] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=ezUUo7YrkqTcMJ4kjj2Jdt, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=e5HnXWfaHvHi7kZRi3qBcQ, sourceId=bXclemzkrjuls1nY3voDws, scenario=KafKaTestApiTestBegin]
15:14:47.419 INFO  [T=eqma8t4uBmbfxhSKMWABtq] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:47.419 INFO  [T=eqma8t4uBmbfxhSKMWABtq] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:47.602 INFO  [T=cx3IuXpacFzig6lStHRMTS] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@4ef54600}']
15:14:47.603 INFO  [T=cx3IuXpacFzig6lStHRMTS] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=cx3IuXpacFzig6lStHRMTS]
15:14:47.604 INFO  [T=cx3IuXpacFzig6lStHRMTS] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:47.605 INFO  [T=cx3IuXpacFzig6lStHRMTS] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:47.630 INFO  [T=eu3MnZk2kQY7OYLPUf8nwx] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:47.630 INFO  [T=eu3MnZk2kQY7OYLPUf8nwx] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dnh1MDfGbaJbVJILt4w4da, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=deNjn8y7hlsdeQAtQXMggk, sourceId=cx3IuXpacFzig6lStHRMTS, scenario=KafKaTestApiTestBegin]
15:14:47.630 INFO  [T=eu3MnZk2kQY7OYLPUf8nwx] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:47.630 INFO  [T=eu3MnZk2kQY7OYLPUf8nwx] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:47.781 INFO  [T=c5CNuvPlw1Mfjq8dITThys] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@5b40c1d6}']
15:14:47.782 INFO  [T=c5CNuvPlw1Mfjq8dITThys] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=c5CNuvPlw1Mfjq8dITThys]
15:14:47.784 INFO  [T=c5CNuvPlw1Mfjq8dITThys] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:47.785 INFO  [T=c5CNuvPlw1Mfjq8dITThys] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[4ms] Response[content:null]
15:14:47.793 INFO  [T=fbzz8vOMYr48sZDvDjpQex] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:47.793 INFO  [T=fbzz8vOMYr48sZDvDjpQex] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=cG6zrc2iYBb31KSwYRJzvW, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=fGvdPVP37jplpfX3QzY0w2, sourceId=c5CNuvPlw1Mfjq8dITThys, scenario=KafKaTestApiTestBegin]
15:14:47.793 INFO  [T=fbzz8vOMYr48sZDvDjpQex] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:47.793 INFO  [T=fbzz8vOMYr48sZDvDjpQex] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:47.954 INFO  [T=fiovHeq17K3h1PbzfrZJjG] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@78fe5fd5}']
15:14:47.954 INFO  [T=fiovHeq17K3h1PbzfrZJjG] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=fiovHeq17K3h1PbzfrZJjG]
15:14:47.955 INFO  [T=fiovHeq17K3h1PbzfrZJjG] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:47.956 INFO  [T=fiovHeq17K3h1PbzfrZJjG] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:47.964 INFO  [T=g0WwioZjWackBC1XEXd6X2] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:47.964 INFO  [T=g0WwioZjWackBC1XEXd6X2] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=cNZzk5Z28Pl2mrvSRAsYNm, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=cm6StW3sq3uek5dj3h3Olt, sourceId=fiovHeq17K3h1PbzfrZJjG, scenario=KafKaTestApiTestBegin]
15:14:47.964 INFO  [T=g0WwioZjWackBC1XEXd6X2] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:47.964 INFO  [T=g0WwioZjWackBC1XEXd6X2] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:48.140 INFO  [T=bNlbsf1SfFtlA0BF0ncmOd] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@7936e41c}']
15:14:48.140 INFO  [T=bNlbsf1SfFtlA0BF0ncmOd] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=bNlbsf1SfFtlA0BF0ncmOd]
15:14:48.142 INFO  [T=bNlbsf1SfFtlA0BF0ncmOd] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:48.143 INFO  [T=bNlbsf1SfFtlA0BF0ncmOd] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:48.149 INFO  [T=ehhtM2FjFV4b33MjZRzAjs] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:48.149 INFO  [T=ehhtM2FjFV4b33MjZRzAjs] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=eRkyPC9Oev95O8dqM22Uw0, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=bmcLlW4BChn7VjZysbvgwM, sourceId=bNlbsf1SfFtlA0BF0ncmOd, scenario=KafKaTestApiTestBegin]
15:14:48.149 INFO  [T=ehhtM2FjFV4b33MjZRzAjs] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:48.149 INFO  [T=ehhtM2FjFV4b33MjZRzAjs] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:48.299 INFO  [T=erggVsfUr5wjo6emaCEQdc] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@3a2ab41c}']
15:14:48.299 INFO  [T=erggVsfUr5wjo6emaCEQdc] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=erggVsfUr5wjo6emaCEQdc]
15:14:48.300 INFO  [T=erggVsfUr5wjo6emaCEQdc] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:48.301 INFO  [T=erggVsfUr5wjo6emaCEQdc] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:48.323 INFO  [T=cyCzBZtm9HK7lXUUG9ZIbK] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:48.323 INFO  [T=cyCzBZtm9HK7lXUUG9ZIbK] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=gspoJXYboDTbknC3s19M27, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=ffoF5LUgrBBcjgorGYOd0L, sourceId=erggVsfUr5wjo6emaCEQdc, scenario=KafKaTestApiTestBegin]
15:14:48.323 INFO  [T=cyCzBZtm9HK7lXUUG9ZIbK] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:48.323 INFO  [T=cyCzBZtm9HK7lXUUG9ZIbK] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:48.474 INFO  [T=dQelhe6pb64jRrFS0S9SiT] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@7d3cfd7d}']
15:14:48.475 INFO  [T=dQelhe6pb64jRrFS0S9SiT] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dQelhe6pb64jRrFS0S9SiT]
15:14:48.476 INFO  [T=dQelhe6pb64jRrFS0S9SiT] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:48.477 INFO  [T=dQelhe6pb64jRrFS0S9SiT] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:48.484 INFO  [T=f3MTwPQYZrdd2NCZ3FuJUf] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:48.484 INFO  [T=f3MTwPQYZrdd2NCZ3FuJUf] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=eaRqeZBT6gj2kfEzYvDFOf, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=dufdUfWWAwv8pgGk3DAhEd, sourceId=dQelhe6pb64jRrFS0S9SiT, scenario=KafKaTestApiTestBegin]
15:14:48.484 INFO  [T=f3MTwPQYZrdd2NCZ3FuJUf] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:48.484 INFO  [T=f3MTwPQYZrdd2NCZ3FuJUf] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:48.653 INFO  [T=gm2iNSoyCIC86cefgmUjVM] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@278a08d3}']
15:14:48.653 INFO  [T=gm2iNSoyCIC86cefgmUjVM] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=gm2iNSoyCIC86cefgmUjVM]
15:14:48.656 INFO  [T=gm2iNSoyCIC86cefgmUjVM] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:48.657 INFO  [T=gm2iNSoyCIC86cefgmUjVM] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[4ms] Response[content:null]
15:14:48.667 INFO  [T=c08SV5IOeIY7GMtEym111H] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:48.667 INFO  [T=c08SV5IOeIY7GMtEym111H] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=e1lnkPdNWRt6JDWKaYtyV2, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=fxpkRsxA7A64zqEmWG65BD, sourceId=gm2iNSoyCIC86cefgmUjVM, scenario=KafKaTestApiTestBegin]
15:14:48.667 INFO  [T=c08SV5IOeIY7GMtEym111H] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:48.667 INFO  [T=c08SV5IOeIY7GMtEym111H] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:48.819 INFO  [T=bJW7BYwCBbj78J8RZpU6t9] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@23f56f3b}']
15:14:48.819 INFO  [T=bJW7BYwCBbj78J8RZpU6t9] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=bJW7BYwCBbj78J8RZpU6t9]
15:14:48.820 INFO  [T=bJW7BYwCBbj78J8RZpU6t9] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:48.821 INFO  [T=bJW7BYwCBbj78J8RZpU6t9] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:48.828 INFO  [T=fyxVHLkX5596emEeuDAVLK] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:48.828 INFO  [T=fyxVHLkX5596emEeuDAVLK] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dXnQTQA8HXPjDGLZeP4Kh8, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=bsIUoQe17F8fZZ0mZEAcOu, sourceId=bJW7BYwCBbj78J8RZpU6t9, scenario=KafKaTestApiTestBegin]
15:14:48.828 INFO  [T=fyxVHLkX5596emEeuDAVLK] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:48.829 INFO  [T=fyxVHLkX5596emEeuDAVLK] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:49.003 INFO  [T=cJMq7tZKhu19swmmNDEScq] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@ec11386}']
15:14:49.004 INFO  [T=cJMq7tZKhu19swmmNDEScq] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=cJMq7tZKhu19swmmNDEScq]
15:14:49.005 INFO  [T=cJMq7tZKhu19swmmNDEScq] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:49.006 INFO  [T=cJMq7tZKhu19swmmNDEScq] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:49.012 INFO  [T=g2dg0rLFQcqbJVozVGKb26] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:49.012 INFO  [T=g2dg0rLFQcqbJVozVGKb26] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=eRt0V9KrLMb0NJU3CXRQpP, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=c04oxSGa7VEgaQL3XZEdWn, sourceId=cJMq7tZKhu19swmmNDEScq, scenario=KafKaTestApiTestBegin]
15:14:49.012 INFO  [T=g2dg0rLFQcqbJVozVGKb26] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:49.012 INFO  [T=g2dg0rLFQcqbJVozVGKb26] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:49.172 INFO  [T=cKhaa9h2AsahgJUh7bIhIP] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@181d4b4a}']
15:14:49.172 INFO  [T=cKhaa9h2AsahgJUh7bIhIP] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=cKhaa9h2AsahgJUh7bIhIP]
15:14:49.173 INFO  [T=cKhaa9h2AsahgJUh7bIhIP] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:49.174 INFO  [T=cKhaa9h2AsahgJUh7bIhIP] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:49.180 INFO  [T=dQbrFBAiWmb3y4GZzFMYQL] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:49.180 INFO  [T=dQbrFBAiWmb3y4GZzFMYQL] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dzZx7auAAipdJ7LczHGCS7, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=fKyt0BpT7yc4nD5Sdxudgq, sourceId=cKhaa9h2AsahgJUh7bIhIP, scenario=KafKaTestApiTestBegin]
15:14:49.180 INFO  [T=dQbrFBAiWmb3y4GZzFMYQL] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:49.180 INFO  [T=dQbrFBAiWmb3y4GZzFMYQL] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:49.338 INFO  [T=dr0qCuDrS1w9mcqZCuyRUh] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@690c1f37}']
15:14:49.338 INFO  [T=dr0qCuDrS1w9mcqZCuyRUh] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dr0qCuDrS1w9mcqZCuyRUh]
15:14:49.339 INFO  [T=dr0qCuDrS1w9mcqZCuyRUh] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:49.340 INFO  [T=dr0qCuDrS1w9mcqZCuyRUh] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:49.347 INFO  [T=b5QzSgcFB5ch9gN156XvoA] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:49.347 INFO  [T=b5QzSgcFB5ch9gN156XvoA] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=dAYp9ryY4k47OihoMjEx2s, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=gnbbhQkEy0Ff1pvM8vvTsX, sourceId=dr0qCuDrS1w9mcqZCuyRUh, scenario=KafKaTestApiTestBegin]
15:14:49.347 INFO  [T=b5QzSgcFB5ch9gN156XvoA] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:49.347 INFO  [T=b5QzSgcFB5ch9gN156XvoA] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:49.521 INFO  [T=dsAKSOoNNO5gSQQLaceYEE] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@42400499}']
15:14:49.521 INFO  [T=dsAKSOoNNO5gSQQLaceYEE] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=dsAKSOoNNO5gSQQLaceYEE]
15:14:49.522 INFO  [T=dsAKSOoNNO5gSQQLaceYEE] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:49.523 INFO  [T=dsAKSOoNNO5gSQQLaceYEE] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:49.530 INFO  [T=dyGJRdjPpn2ibGRnwDNFqX] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:49.530 INFO  [T=dyGJRdjPpn2ibGRnwDNFqX] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=fnYqkGvhGAE0pRBXWa2Wwb, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=f4INeOQHscBa8xLyDM06PK, sourceId=dsAKSOoNNO5gSQQLaceYEE, scenario=KafKaTestApiTestBegin]
15:14:49.530 INFO  [T=dyGJRdjPpn2ibGRnwDNFqX] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:49.530 INFO  [T=dyGJRdjPpn2ibGRnwDNFqX] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:49.668 INFO  [T=bIJWKU8BZDl3hihBnfilXz] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@792369ab}']
15:14:49.668 INFO  [T=bIJWKU8BZDl3hihBnfilXz] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=bIJWKU8BZDl3hihBnfilXz]
15:14:49.669 INFO  [T=bIJWKU8BZDl3hihBnfilXz] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:49.670 INFO  [T=bIJWKU8BZDl3hihBnfilXz] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:49.679 INFO  [T=f4XXhKE81hEeDqDs3KQvU6] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:49.679 INFO  [T=f4XXhKE81hEeDqDs3KQvU6] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=bNNnpS175KgkC5ZFYVZYTd, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=gkfXE3NHFWK8LohOwDWeY9, sourceId=bIJWKU8BZDl3hihBnfilXz, scenario=KafKaTestApiTestBegin]
15:14:49.679 INFO  [T=f4XXhKE81hEeDqDs3KQvU6] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:49.679 INFO  [T=f4XXhKE81hEeDqDs3KQvU6] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:49.843 INFO  [T=g2yR2HhhcamifYzQE42Uwq] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@2ec0417e}']
15:14:49.844 INFO  [T=g2yR2HhhcamifYzQE42Uwq] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=g2yR2HhhcamifYzQE42Uwq]
15:14:49.845 INFO  [T=g2yR2HhhcamifYzQE42Uwq] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:49.846 INFO  [T=g2yR2HhhcamifYzQE42Uwq] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:14:49.854 INFO  [T=f36TQYbIwFaj8rAugqahvL] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:49.854 INFO  [T=f36TQYbIwFaj8rAugqahvL] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=b1oVC2sRuNL0XRJqGnU5yS, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=f6Wfaqb9oCyeEzeveSZt4C, sourceId=g2yR2HhhcamifYzQE42Uwq, scenario=KafKaTestApiTestBegin]
15:14:49.854 INFO  [T=f36TQYbIwFaj8rAugqahvL] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:49.854 INFO  [T=f36TQYbIwFaj8rAugqahvL] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:14:50.011 INFO  [T=baNAuljtlQfidE9N22tneO] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@141e6534}']
15:14:50.011 INFO  [T=baNAuljtlQfidE9N22tneO] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=baNAuljtlQfidE9N22tneO]
15:14:50.013 INFO  [T=baNAuljtlQfidE9N22tneO] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:50.014 INFO  [T=baNAuljtlQfidE9N22tneO] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:50.022 INFO  [T=fzcposnrrbJ8i94nrEVjuJ] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:50.022 INFO  [T=fzcposnrrbJ8i94nrEVjuJ] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=cTFosA3BX8Id2GP0rybAFw, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=by29h0XwvoClNmoL5SxI0x, sourceId=baNAuljtlQfidE9N22tneO, scenario=KafKaTestApiTestBegin]
15:14:50.023 INFO  [T=fzcposnrrbJ8i94nrEVjuJ] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:50.023 INFO  [T=fzcposnrrbJ8i94nrEVjuJ] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:14:50.163 INFO  [T=eCysAExNGAvcV6roAQG1wd] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@62558d66}']
15:14:50.163 INFO  [T=eCysAExNGAvcV6roAQG1wd] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=eCysAExNGAvcV6roAQG1wd]
15:14:50.164 INFO  [T=eCysAExNGAvcV6roAQG1wd] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:14:50.165 INFO  [T=eCysAExNGAvcV6roAQG1wd] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:14:50.173 INFO  [T=fhR0CtXXzqp6yRWgeJRHcT] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:14:50.173 INFO  [T=fhR0CtXXzqp6yRWgeJRHcT] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=f4GroJ0XXrOgUWG5KoZCjM, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=d0j5Qo83j5ekc1nIcgxdQK, sourceId=eCysAExNGAvcV6roAQG1wd, scenario=KafKaTestApiTestBegin]
15:14:50.173 INFO  [T=fhR0CtXXzqp6yRWgeJRHcT] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:14:50.173 INFO  [T=fhR0CtXXzqp6yRWgeJRHcT] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:15:39.465 INFO  [T=e1sYsKZt67mhL4IYeh4ia7] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@37a16176}']
15:15:39.465 INFO  [T=e1sYsKZt67mhL4IYeh4ia7] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=e1sYsKZt67mhL4IYeh4ia7]
15:15:39.467 INFO  [T=e1sYsKZt67mhL4IYeh4ia7] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:15:39.468 INFO  [T=e1sYsKZt67mhL4IYeh4ia7] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:15:39.476 INFO  [T=dJLdRLYq5Cz4zyfNCMMjYb] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:15:39.476 INFO  [T=dJLdRLYq5Cz4zyfNCMMjYb] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=cJuXlJdz0l9fLxNzFdiPes, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=d1aFPuM1hVBhC1GmYAyo9X, sourceId=e1sYsKZt67mhL4IYeh4ia7, scenario=KafKaTestApiTestBegin]
15:15:39.476 INFO  [T=dJLdRLYq5Cz4zyfNCMMjYb] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:15:39.476 INFO  [T=dJLdRLYq5Cz4zyfNCMMjYb] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:16:02.203 INFO  [T=ddqZUeCm7fi9nL48Q3eu4z] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@41bfa44e}']
15:16:02.204 INFO  [T=ddqZUeCm7fi9nL48Q3eu4z] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=ddqZUeCm7fi9nL48Q3eu4z]
15:16:02.205 INFO  [T=ddqZUeCm7fi9nL48Q3eu4z] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:16:02.205 INFO  [T=ddqZUeCm7fi9nL48Q3eu4z] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[2ms] Response[content:null]
15:16:02.211 INFO  [T=eRrWQYfxWmDe50knrJtdv8] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:16:02.211 INFO  [T=eRrWQYfxWmDe50knrJtdv8] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=bpZezHzU12bggHqdgzx7Ez, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=doUFldpZUmkj282kY2V74I, sourceId=ddqZUeCm7fi9nL48Q3eu4z, scenario=KafKaTestApiTestBegin]
15:16:02.212 INFO  [T=eRrWQYfxWmDe50knrJtdv8] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:16:02.212 INFO  [T=eRrWQYfxWmDe50knrJtdv8] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:16:09.850 INFO  [T=fzEmQeGBWsw02DOlzStTUE] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@6cc93daf}']
15:16:09.851 INFO  [T=fzEmQeGBWsw02DOlzStTUE] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=fzEmQeGBWsw02DOlzStTUE]
15:16:09.852 INFO  [T=fzEmQeGBWsw02DOlzStTUE] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:16:09.853 INFO  [T=fzEmQeGBWsw02DOlzStTUE] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[3ms] Response[content:null]
15:16:09.859 INFO  [T=dwBQabKcVzWi8tQ8DoprIa] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:16:09.859 INFO  [T=dwBQabKcVzWi8tQ8DoprIa] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=g9mfEoRMpOp6z0L7P78Swh, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=b4d1uzYPB3595tlfH7DhJb, sourceId=fzEmQeGBWsw02DOlzStTUE, scenario=KafKaTestApiTestBegin]
15:16:09.859 INFO  [T=dwBQabKcVzWi8tQ8DoprIa] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:16:09.859 INFO  [T=dwBQabKcVzWi8tQ8DoprIa] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[0ms] Result[{"soleCode":"DS01"}]
15:17:14.655 INFO  [] StartupInfoLogger.logStarting:48 Starting Runner on DS-TS-0358 with PID 6676 (D:\Workspace\spring_boot_kafka_test2\bin started by ex-songdeshun in D:\Workspace\spring_boot_kafka_test2)
15:17:14.655 INFO  [] SpringApplication.logStartupProfileInfo:659 No active profile set, falling back to default profiles: default
15:17:14.705 INFO  [] AbstractApplicationContext.prepareRefresh:581 Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@487db668: startup date [Wed Sep 27 15:17:14 CST 2017]; root of context hierarchy
15:17:15.842 INFO  [] RepositoryConfigurationDelegate.multipleStoresDetected:166 Multiple Spring Data modules found, entering strict repository configuration mode!
15:17:15.898 INFO  [] RepositoryConfigurationDelegate.multipleStoresDetected:166 Multiple Spring Data modules found, entering strict repository configuration mode!
15:17:16.224 INFO  [] PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 Bean 'com.dashuf.core.common.configuration.CommonConfiguration' of type [class com.dashuf.core.common.configuration.CommonConfiguration$$EnhancerBySpringCGLIB$$ee995afb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:17:16.238 INFO  [] PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 Bean 'com.dashuf.core.event.configuration.EventConfiguration' of type [class com.dashuf.core.event.configuration.EventConfiguration$$EnhancerBySpringCGLIB$$4bd33f33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:17:16.245 INFO  [] PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [class org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$1f75c2d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:17:16.336 INFO  [] PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:328 Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4bc3b155] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15:17:16.882 INFO  [] Xnio.<clinit>:99 XNIO version 3.3.6.Final
15:17:16.899 INFO  [] NioXnio.<clinit>:55 XNIO NIO Implementation Version 3.3.6.Final
15:17:16.979 WARN  [] Bootstrap.handleDeployment:67 UT026009: XNIO worker was not set on WebSocketDeploymentInfo, the default worker will be used
15:17:16.979 WARN  [] Bootstrap.handleDeployment:76 UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
15:17:16.999 INFO  [] ServletContextImpl.log:313 Initializing Spring embedded WebApplicationContext
15:17:16.999 INFO  [] EmbeddedWebApplicationContext.prepareEmbeddedWebApplicationContext:276 Root WebApplicationContext: initialization completed in 2294 ms
15:17:17.229 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'metricFilter' to: [/*]
15:17:17.239 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'characterEncodingFilter' to: [/*]
15:17:17.239 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
15:17:17.239 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'httpPutFormContentFilter' to: [/*]
15:17:17.239 INFO  [] AbstractFilterRegistrationBean.configure:271 Mapping filter: 'contextFilter' to urls: [*.do, /api/*]
15:17:17.239 INFO  [] AbstractFilterRegistrationBean.configure:271 Mapping filter: 'logFilter' to urls: [*.do, /api/*]
15:17:17.239 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'requestContextFilter' to: [/*]
15:17:17.239 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'webRequestLoggingFilter' to: [/*]
15:17:17.239 INFO  [] AbstractFilterRegistrationBean.configure:258 Mapping filter: 'applicationContextIdFilter' to: [/*]
15:17:17.239 INFO  [] ServletRegistrationBean.onStartup:190 Mapping servlet: 'dispatcherServlet' to [/]
15:17:17.419 INFO  [] LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory:334 Building JPA container EntityManagerFactory for persistence unit 'default'
15:17:17.439 INFO  [] LogHelper.logPersistenceUnitInformation:31 HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
15:17:17.509 INFO  [] Version.logVersion:37 HHH000412: Hibernate Core {5.0.9.Final}
15:17:17.519 INFO  [] Environment.<clinit>:213 HHH000206: hibernate.properties not found
15:17:17.519 INFO  [] Environment.buildBytecodeProvider:317 HHH000021: Bytecode provider name : javassist
15:17:17.591 INFO  [] JavaReflectionManager.<clinit>:66 HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
15:17:17.989 INFO  [] Dialect.<init>:156 HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
15:17:18.138 INFO  [] SchemaValidator.validate:69 HHH000229: Running schema validator
15:17:18.178 INFO  [] AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory:382 Initialized JPA EntityManagerFactory for persistence unit 'default'
15:17:18.258 WARN  [] ServiceInstance.init:87 Instance name is empty, IP[10.1.113.233] will instead of it.
15:17:18.801 INFO  [] RequestMappingHandlerAdapter.initControllerAdviceCache:534 Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@487db668: startup date [Wed Sep 27 15:17:14 CST 2017]; root of context hierarchy
15:17:18.879 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/api/dataDictionaryDetail.do]}" onto public org.springframework.web.context.request.async.DeferredResult<?> com.dashuf.kafka.api.KafkaTestApi.dataDictionaryDetail(java.lang.String)
15:17:18.881 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
15:17:18.882 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
15:17:18.947 INFO  [] AbstractUrlHandlerMapping.registerHandler:354 Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:17:18.947 INFO  [] AbstractUrlHandlerMapping.registerHandler:354 Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:17:19.002 INFO  [] AbstractUrlHandlerMapping.registerHandler:354 Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
15:17:19.446 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
15:17:19.456 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/info || /info.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:19.456 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/logfile || /logfile.json],methods=[GET || HEAD]}" onto public void org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException,java.io.IOException
15:17:19.456 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:19.456 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:19.456 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:19.456 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:19.456 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/health || /health.json],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal)
15:17:19.456 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:19.456 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
15:17:19.456 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/env || /env.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:19.466 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:19.466 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
15:17:19.466 INFO  [] AbstractHandlerMethodMapping$MappingRegistry.register:543 Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
15:17:19.734 WARN  [] RedisStarterDeprecationWarningAutoConfiguration.logWarning:43 spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
15:17:19.894 INFO  [] MBeanExporter.afterSingletonsInstantiated:431 Registering beans for JMX exposure on startup
15:17:19.894 INFO  [] DefaultLifecycleProcessor$LifecycleGroup.start:341 Starting beans in phase 0
15:17:19.914 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:17:19.934 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = consumer-1
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:17:19.954 INFO  [] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:17:19.954 INFO  [] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:17:19.964 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:17:19.964 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = consumer-2
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:17:19.964 INFO  [] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:17:19.964 INFO  [] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:17:19.964 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:17:19.974 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = consumer-3
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:17:19.974 INFO  [] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:17:19.974 INFO  [] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:17:19.974 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:17:19.974 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = consumer-4
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:17:19.974 INFO  [] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:17:19.974 INFO  [] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:17:19.974 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:17:19.984 INFO  [] AbstractConfig.logAll:178 ConsumerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	partition.assignment.strategy = [org.apache.kafka.clients.consumer.RangeAssignor]
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	max.partition.fetch.bytes = 1048576
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	enable.auto.commit = false
	sasl.mechanism = GSSAPI
	interceptor.classes = null
	exclude.internal.topics = true
	ssl.truststore.password = null
	client.id = consumer-5
	ssl.endpoint.identification.algorithm = null
	max.poll.records = 2147483647
	check.crcs = true
	request.timeout.ms = 40000
	heartbeat.interval.ms = 3000
	auto.commit.interval.ms = 100
	receive.buffer.bytes = 65536
	ssl.truststore.type = JKS
	ssl.truststore.location = null
	ssl.keystore.password = null
	fetch.min.bytes = 1
	send.buffer.bytes = 131072
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	group.id = Spring_boot_kafka_test2.10.1.113.233
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	ssl.key.password = null
	fetch.max.wait.ms = 500
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	session.timeout.ms = 15000
	metrics.num.samples = 2
	key.deserializer = class org.apache.kafka.common.serialization.IntegerDeserializer
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	auto.offset.reset = latest

15:17:19.984 INFO  [] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:17:19.984 INFO  [] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:17:20.024 INFO  [] AbstractCoordinator.handleGroupMetadataResponse:505 Discovered coordinator 10.1.105.30:9092 (id: 2147483647 rack: null) for group Spring_boot_kafka_test2.10.1.113.233.
15:17:20.024 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:17:20.024 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[]
15:17:20.024 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:17:20.027 INFO  [] AbstractCoordinator.handleGroupMetadataResponse:505 Discovered coordinator 10.1.105.30:9092 (id: 2147483647 rack: null) for group Spring_boot_kafka_test2.10.1.113.233.
15:17:20.027 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:17:20.027 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[]
15:17:20.027 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:17:20.028 INFO  [] AbstractCoordinator.handleGroupMetadataResponse:505 Discovered coordinator 10.1.105.30:9092 (id: 2147483647 rack: null) for group Spring_boot_kafka_test2.10.1.113.233.
15:17:20.028 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:17:20.028 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[]
15:17:20.028 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:17:20.038 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:17:20.048 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 6
15:17:20.048 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 6
15:17:20.048 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 6
15:17:20.048 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [KafKaTestApiTestEnd-2] for group Spring_boot_kafka_test2.10.1.113.233
15:17:20.048 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [KafKaTestApiTestEnd-1] for group Spring_boot_kafka_test2.10.1.113.233
15:17:20.048 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [KafKaTestApiTestEnd-0] for group Spring_boot_kafka_test2.10.1.113.233
15:17:20.058 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[KafKaTestApiTestEnd-2]
15:17:20.058 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[KafKaTestApiTestEnd-1]
15:17:20.058 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[KafKaTestApiTestEnd-0]
15:17:20.098 INFO  [] AbstractCoordinator.handleGroupMetadataResponse:505 Discovered coordinator 10.1.105.30:9092 (id: 2147483647 rack: null) for group Spring_boot_kafka_test2.10.1.113.233.
15:17:20.098 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:17:20.098 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[]
15:17:20.098 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:17:20.098 INFO  [] AbstractCoordinator.handleGroupMetadataResponse:505 Discovered coordinator 10.1.105.30:9092 (id: 2147483647 rack: null) for group Spring_boot_kafka_test2.10.1.113.233.
15:17:20.098 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:17:20.098 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[]
15:17:20.098 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:17:20.198 INFO  [] UndertowEmbeddedServletContainer.start:214 Undertow started on port(s) 9051 (http)
15:17:20.208 INFO  [] StartupInfoLogger.logStarted:57 Started Runner in 5.937 seconds (JVM running for 6.419)
15:17:23.061 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [KafKaTestApiTestEnd-0] for group Spring_boot_kafka_test2.10.1.113.233
15:17:23.061 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [KafKaTestApiTestEnd-2] for group Spring_boot_kafka_test2.10.1.113.233
15:17:23.062 INFO  [] ConsumerCoordinator.onJoinPrepare:292 Revoking previously assigned partitions [KafKaTestApiTestEnd-1] for group Spring_boot_kafka_test2.10.1.113.233
15:17:23.094 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[KafKaTestApiTestEnd-0]
15:17:23.095 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[KafKaTestApiTestEnd-1]
15:17:23.095 INFO  [] AbstractMessageListenerContainer$2.onPartitionsRevoked:242 partitions revoked:[KafKaTestApiTestEnd-2]
15:17:23.095 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:17:23.095 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:17:23.095 INFO  [] AbstractCoordinator.sendJoinGroupRequest:326 (Re-)joining group Spring_boot_kafka_test2.10.1.113.233
15:17:23.101 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 7
15:17:23.101 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:17:23.102 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[]
15:17:23.102 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 7
15:17:23.102 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [] for group Spring_boot_kafka_test2.10.1.113.233
15:17:23.102 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[]
15:17:23.102 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 7
15:17:23.102 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 7
15:17:23.102 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [KafKaTestApiTestEnd-2] for group Spring_boot_kafka_test2.10.1.113.233
15:17:23.102 INFO  [] AbstractCoordinator$SyncGroupResponseHandler.handle:434 Successfully joined group Spring_boot_kafka_test2.10.1.113.233 with generation 7
15:17:23.103 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [KafKaTestApiTestEnd-0] for group Spring_boot_kafka_test2.10.1.113.233
15:17:23.103 INFO  [] ConsumerCoordinator.onJoinComplete:231 Setting newly assigned partitions [KafKaTestApiTestEnd-1] for group Spring_boot_kafka_test2.10.1.113.233
15:17:23.108 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[KafKaTestApiTestEnd-2]
15:17:23.108 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[KafKaTestApiTestEnd-0]
15:17:23.109 INFO  [] AbstractMessageListenerContainer$2.onPartitionsAssigned:247 partitions assigned:[KafKaTestApiTestEnd-1]
15:17:35.663 INFO  [T=gsJkB3lVtbp269q8gfDedq] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@2e8e9250}']
15:17:35.664 INFO  [T=gsJkB3lVtbp269q8gfDedq] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=gsJkB3lVtbp269q8gfDedq]
15:17:35.669 INFO  [T=gsJkB3lVtbp269q8gfDedq] ServletContextImpl.log:313 Initializing Spring FrameworkServlet 'dispatcherServlet'
15:17:35.669 INFO  [T=gsJkB3lVtbp269q8gfDedq] FrameworkServlet.initServletBean:489 FrameworkServlet 'dispatcherServlet': initialization started
15:17:35.683 INFO  [T=gsJkB3lVtbp269q8gfDedq] FrameworkServlet.initServletBean:508 FrameworkServlet 'dispatcherServlet': initialization completed in 13 ms
15:17:35.793 INFO  [T=gsJkB3lVtbp269q8gfDedq] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:17:35.824 INFO  [T=gsJkB3lVtbp269q8gfDedq] AbstractConfig.logAll:178 ProducerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	sasl.mechanism = GSSAPI
	max.block.ms = 60000
	interceptor.classes = null
	ssl.truststore.password = null
	client.id = 
	ssl.endpoint.identification.algorithm = null
	request.timeout.ms = 30000
	acks = 1
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	retries = 0
	ssl.truststore.location = null
	ssl.keystore.password = null
	send.buffer.bytes = 131072
	compression.type = none
	metadata.fetch.timeout.ms = 60000
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	buffer.memory = 33554432
	timeout.ms = 30000
	key.serializer = class org.apache.kafka.common.serialization.IntegerSerializer
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	block.on.buffer.full = false
	ssl.key.password = null
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	max.in.flight.requests.per.connection = 5
	metrics.num.samples = 2
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	batch.size = 16384
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	max.request.size = 1048576
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	linger.ms = 1

15:17:35.832 INFO  [T=gsJkB3lVtbp269q8gfDedq] AbstractConfig.logAll:178 ProducerConfig values: 
	metric.reporters = []
	metadata.max.age.ms = 300000
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	bootstrap.servers = [kafka1.intsit.dsfdc.com:9092, kafka2.intsit.dsfdc.com:9092, kafka3.intsit.dsfdc.com:9092]
	ssl.keystore.type = JKS
	sasl.mechanism = GSSAPI
	max.block.ms = 60000
	interceptor.classes = null
	ssl.truststore.password = null
	client.id = producer-1
	ssl.endpoint.identification.algorithm = null
	request.timeout.ms = 30000
	acks = 1
	receive.buffer.bytes = 32768
	ssl.truststore.type = JKS
	retries = 0
	ssl.truststore.location = null
	ssl.keystore.password = null
	send.buffer.bytes = 131072
	compression.type = none
	metadata.fetch.timeout.ms = 60000
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	buffer.memory = 33554432
	timeout.ms = 30000
	key.serializer = class org.apache.kafka.common.serialization.IntegerSerializer
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.trustmanager.algorithm = PKIX
	block.on.buffer.full = false
	ssl.key.password = null
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	max.in.flight.requests.per.connection = 5
	metrics.num.samples = 2
	ssl.protocol = TLS
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	batch.size = 16384
	ssl.keystore.location = null
	ssl.cipher.suites = null
	security.protocol = PLAINTEXT
	max.request.size = 1048576
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	linger.ms = 1

15:17:35.833 INFO  [T=gsJkB3lVtbp269q8gfDedq] AppInfoParser$AppInfo.<init>:83 Kafka version : 0.10.0.1
15:17:35.833 INFO  [T=gsJkB3lVtbp269q8gfDedq] AppInfoParser$AppInfo.<init>:84 Kafka commitId : a7a17cdec9eaa6c5
15:17:36.049 INFO  [T=gsJkB3lVtbp269q8gfDedq] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[386ms] Response[content:null]
15:17:40.763 INFO  [T=cYvJdKbRhbq82JvUA9TW5e] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:17:40.764 INFO  [T=cYvJdKbRhbq82JvUA9TW5e] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=et35y32S0MOkYZImn5UVxq, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=cVcWXsOYdmRkpdE6qNzDi7, sourceId=gsJkB3lVtbp269q8gfDedq, scenario=KafKaTestApiTestBegin]
15:17:40.764 INFO  [T=cYvJdKbRhbq82JvUA9TW5e] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:17:40.764 INFO  [T=cYvJdKbRhbq82JvUA9TW5e] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
15:17:55.805 INFO  [T=e3zq47EgHeclCeMrlHbQ5G] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@603c4c00}']
15:17:55.806 INFO  [T=e3zq47EgHeclCeMrlHbQ5G] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=e3zq47EgHeclCeMrlHbQ5G]
15:17:55.811 INFO  [T=e3zq47EgHeclCeMrlHbQ5G] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:17:55.812 INFO  [T=e3zq47EgHeclCeMrlHbQ5G] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[8ms] Response[content:null]
15:18:05.779 INFO  [T=fMPsOB4Evodhen4c9UodZa] LogFilter.doFilterInternal:57 ##### Begin Request[/api/dataDictionaryDetail.do] Param[param='{soleCode=[Ljava.lang.String;@440d2d70}']
15:18:05.780 INFO  [T=fMPsOB4Evodhen4c9UodZa] LogFilter.doFilterInternal:61 ##### Request[/api/dataDictionaryDetail.do] CallInfo[user=UNKNOWN, caller=null, callerId=null, sourceId=fMPsOB4Evodhen4c9UodZa]
15:18:05.782 INFO  [T=fMPsOB4Evodhen4c9UodZa] KafkaTestApi.dataDictionaryDetail:32 数据字典详情查询的入参为:{"soleCode":"DS01"}
15:18:05.783 INFO  [T=fMPsOB4Evodhen4c9UodZa] LogFilter.doFilterInternal:69 ##### Finish Request[/api/dataDictionaryDetail.do] Cost[4ms] Response[content:null]
15:18:10.668 INFO  [T=cFO5LPibf9n1sBGl33d0iL] EventMessageListener.invokeEvent:54 ##### Begin Event[KafKaTestApiTestEnd] Param[[{"soleCode":"DS01"}]]
15:18:10.669 INFO  [T=cFO5LPibf9n1sBGl33d0iL] EventMessageListener.invokeEvent:56 ##### Event[KafKaTestApiTestEnd] CallInfo[msgId=ci7Ebw9Jhy07fPeme5n4Lq, user=UNKNOWN, caller=Spring_boot_kafka_test, callerId=cBAdyf33wE7lUztiDPs41p, sourceId=fMPsOB4Evodhen4c9UodZa, scenario=KafKaTestApiTestBegin]
15:18:10.669 INFO  [T=cFO5LPibf9n1sBGl33d0iL] KafkaTestApi.DataDictionaryDetailEnd:40 数据字典详情查询返回数据为
15:18:10.669 INFO  [T=cFO5LPibf9n1sBGl33d0iL] EventMessageListener.invokeEvent:66 ##### Finish Event[KafKaTestApiTestEnd] Cost[1ms] Result[{"soleCode":"DS01"}]
